let pass1_result = ''
let data_values = ''
let data_index = 0
let pass2_result = ''
let total_array_size = 0
let var_A = 0
let var_A1str = ""
let var_A2str = ""
let var_A5str = ""
let var_Astr = ""
let var_B1 = 0
let var_B1str = ""
let var_B2int = 0
let var_B3int = 0
let var_B4 = 0
let var_B5int = 0
let var_Bintarr = new Int16Array(2001)
let var_Bstr = ""
let var_C = 0
let var_C1int = 0
let var_C2int = 0
let var_C3int = 0
let var_C4int = 0
let var_C5int = 0
let var_C6int = 0
let var_C7int = 0
let var_Cint = 0
let var_Cintarr = new Int16Array(1601)
let var_Cstr = ""
let var_Dintarr = new Int16Array(1601)
let var_E1str = ""
let var_E2int = 0
let var_ERint = 0
let var_Eint = 0
let var_Estr = ""
let var_F = 0
let var_F1 = 0
let var_F1int = 0
let var_F2int = 0
let var_F4 = 0
let var_F5 = 0
let var_F6 = 0
let var_F7 = 0
let var_F8 = 0
let var_FA = 0
let var_FX = 0
let var_Fstr = ""
let var_Fstrarr = Array.apply('', Array(8)).map(() => '')
let var_G = 0
let var_G1 = 0
let var_Gintarr = new Int16Array(801)
let var_H = 0
let var_H1 = 0
let var_H1intarr = new Int16Array(201)
let var_Hintarr = new Int16Array(201)
let var_I = 0
let var_I0 = 0
let var_I1 = 0
let var_I1intarr = new Int16Array(41)
let var_I1strarr = Array.apply('', Array(31)).map(() => '')
let var_I2 = 0
let var_I2intarr = new Int16Array(41)
let var_I3 = 0
let var_I4 = 0
let var_Iintarr = new Int16Array(41)
let var_Istr = ""
let var_Istrarr = Array.apply('', Array(31)).map(() => '')
let var_J1int = 0
let var_J1str = ""
let var_Jint = 0
let var_Jstr = ""
let var_K1int = 0
let var_K2int = 0
let var_K3int = 0
let var_Kint = 0
let var_Kstr = ""
let var_L = 0
let var_L2int = 0
let var_L3int = 0
let var_Lint = 0
let var_Mint = 0
let var_N1int = 0
let var_N2int = 0
let var_Nint = 0
let var_Q = 0
let var_Qint = 0
let var_R1int = 0
let var_R3int = 0
let var_Rint = 0
let var_ST = 0
let var_T1int = 0
let var_T2int = 0
let var_T3int = 0
let var_T4int = 0
let var_T5int = 0
let var_T7int = 0
let var_T8int = 0
let var_TIstr = ""
let var_Tint = 0
let var_Tstr = ""
let var_X0 = 0
let var_X1 = 0
let var_X1str = ""
let var_X2 = 0
let var_X3 = 0
let var_X4 = 0
let var_X5 = 0
let var_Xstr = ""
let var_Yint = 0
let var_Ystr = ""
let var_Z = 0
let var_Zstr = ""

function main() {
    //CLR 
    var_Z = 0
    var_Cint = 0
    var_C1int = 0
    var_C2int = 0
    var_C3int = 0
    var_C4int = 0
    var_Zstr = "                "
    var_Zstr = var_Zstr + var_Zstr + var_Zstr + var_Zstr
    var_Zstr = var_Zstr + var_Zstr + var_Zstr + var_Zstr.substr(0,  63)
    var_C5int = 0
    var_C6int = 0
    var_C7int = 0
    var_Mint = Math.floor(0 /* PEEK 45 */ + 0 /* PEEK 46 */ * 256 - 282)
    var_Nint = Math.floor(var_Mint + 141)
    var_Qint = 31020
    var_Q = 0
    c64_print(  String.fromCharCode (14))
    var_Ystr = "1"
    var_Rint = 8
    var_R1int = 8
    var_T1int = 8082
    print_screen_title()
    //DIM  var_Bintarr[2000]
    //DIM  var_Cintarr[1600]
    //DIM  var_Dintarr[1600]
    //DIM  var_Gintarr[800]
    //DIM  var_Hintarr[200]
    //DIM  var_H1intarr[200]
    //DIM  var_Iintarr[40]
    //DIM  var_I1intarr[40]
    //DIM  var_I2intarr[40]
    //DIM  var_Istrarr[30]
    //DIM  var_I1strarr[30]
    //DIM  var_Fstrarr[7]
    //CLOSE 14
    //OPEN 14, var_Rint ,15
    //CLOSE 15
    //OPEN 15, var_R1int ,15
    var_Xstr = ""
  var_Tint=1; var_Ystr=""; var_Tstr="(prog. mode : 1)"
    if (var_Tint == 1) {
        //PRINT# 15,"I"+ var_Ystr 
        //INPUT# "FILENAME    :"; var_Astr 
        var_A2str = "C/" + var_Astr.substr(0,  14)
        var_TIstr = "000000"
        compile_programs()
    } else {
        if (var_T3int != 0) {
            var_A2str = var_Astr
            compile_programs()
        }
    }
    var_A = 0
    var_A5str = "OK"
    c64_print( "")
    c64_print(   var_Xstr .substr(0, 6+ var_X2 ))
    c64_print(  "   ")
    c64_print( "")
    c64_print(  var_A )
    c64_print(  var_A5str )
    //CLOSE 2
    //CLOSE 3
    //CLOSE 4
    //CLOSE 15
    for (var_A = 0; var_A <= 5; var_A++) {
        c64_print(  String.fromCharCode (7))
    }
    console.log('END')
}

function compile_programs() {
    do {
        pass1()
        pass2()
        if (var_Tint == 1) {
            return
        }
        read_drive_directory_entry()
        if (var_T3int == 0 && var_T8int == 0) {
            return
        }
        if (var_T3int == 0) {
            var_T8int = 0
            var_T2int = 0
            var_T3int = 0
            read_drive_directory_entry()
        } else {
            var_T2int = Math.floor(var_T2int + 1)
        }
        c64_print(  String.fromCharCode (7))
        var_Kint = 0
        var_B5int = 0
        var_B2int = 0
        var_B3int = 0
        var_Yint = 0
        if (var_Tint < 4) {
            var_H = 0
            var_G = 0
        }
        var_A2str = var_Astr
    } while (true)
}

function pass1() {
    var_A1str = var_Astr.substr(0,  14)
    //CLOSE 14
    //OPEN 14, var_Rint ,15
    //CLOSE 15
    //OPEN 15, var_R1int ,15
    //CLOSE 2
    //OPEN 2, var_Rint ,2, var_Astr +",P,R"
    var_R3int = 14
    get_drive_status()
    //GET #2, var_B1str 
    //GET #2, var_B1str 
    var_R3int = 15
    //PRINT# 15,"S"+ var_Ystr +":Z/"+ var_A1str 
    //CLOSE 6
    if (var_Tint > 1) {
        //OPEN 6, var_R1int ,6, var_Ystr +":Z/"+ var_A1str +",P,W"
        get_drive_status()
        //PRINT# 6,"A"
        //CLOSE 6
    }
    //PRINT# 15,"S"+ var_Ystr +":P/"+ var_A1str 
    //CLOSE 4
    //OPEN 4, var_R1int ,4, var_Ystr +":P/"+ var_A1str +",S,W"
    get_drive_status()
    //PRINT# 15,"S"+ var_Ystr +":D/"+ var_A1str 
    print_screen_title()
    var_X1 = 0
    var_X2 = 0
    var_X3 = 0
    var_X4 = 0
    c64_print( "")
    c64_print(  "   ")
    c64_print( "PROGRAM:  ")
    c64_print(  var_Astr )
    if (var_T8int) {
        c64_print( "PASS0")
    } else {
        c64_print( "PASS1")
    }
    var_Cint = 0
    var_C2int = 1
    var_Eint = 0
    var_X0 = 0
    if (var_Tint < 4 || var_T2int == 0) {
        var_Istr = String.fromCharCode(21)
        write_pcode()
    }
    do {
        var_Istr = ""
        var_I = 0
        var_ERint = 0
        if (!(var_C2int == 0)) {
            sys_read_line()
            if (var_C4int == 0) {
                return
            }
            var_C1int = 3
            // var_B1 is taken care of in sys_read_line
            c64_print( "")
            c64_print(  var_B1 )
            var_Dintarr[var_B5int] = var_B1 - 32767
            var_Cintarr[var_B5int] = var_Eint
            var_B5int = Math.floor(var_B5int + 1)
            if (var_B3int == 0) {
                var_B4 = var_B1
                var_B3int = 1
            }
            sys_chrget() 
            if (var_C2int) {
                continue
            }
        }
        if (var_C3int) {
            sys_chrget() 
            continue
        }
        var_X5 = 0
        if (var_Cint < 128 && (var_Cint < 65 || var_Cint > 90)) {
            p1_extension()
        } else
        if (var_Cint > 64 && var_Cint < 91) {
            p1_var_assign()
        } else
        if (var_Cint == 128) {
            var_Istr = String.fromCharCode(79)
            sys_chrget() 
        } else
        if (var_Cint == 129) {
            p1_for()
        } else
        if (var_Cint == 130) {
            p1_next()
        } else
        if (var_Cint == 131) {
            p1_data()
        } else
        if (var_Cint == 132) {
            p1_inputhash()
        } else
        if (var_Cint == 133) {
            p1_input()
        } else
        if (var_Cint == 134) {
            p1_dim()
        } else
        if (var_Cint == 135) {
            p1_read()
        } else
        if (var_Cint == 136) {
            p1_let()
        } else
        if (var_Cint == 137) {
            var_Jint = 25
            p1_goto()
        } else
        if (var_Cint == 138) {
            p1_run()
        } else
        if (var_Cint == 139) {
            p1_if()
        } else
        if (var_Cint == 140) {
            var_Istr = String.fromCharCode(30)
            sys_chrget() 
        } else
        if (var_Cint == 141) {
            var_Jint = 26
            p1_goto()
        } else
        if (var_Cint == 142) {
            var_Istr = String.fromCharCode(29)
            sys_chrget() 
        } else
        if (var_Cint == 143) {
            p1_rem()
        } else
        if (var_Cint == 144) {
            var_Istr = String.fromCharCode(73)
            sys_chrget() 
        } else
        if (var_Cint == 145) {
            p1_on()
        } else
        if (var_Cint == 146) {
            p1_wait()
        } else
        if (var_Cint == 147) {
            var_Jint = 93
            p1_load_save_verify()
        } else
        if (var_Cint == 148) {
            var_Jint = 94
            p1_load_save_verify()
        } else
        if (var_Cint == 149) {
            var_Jint = 95
            p1_load_save_verify()
        } else
        if (var_Cint == 150) {
            p1_def()
        } else
        if (var_Cint == 151) {
            p1_poke()
        } else
        if (var_Cint == 152) {
            var_F5 = 1
            p1_printhash()
        } else
        if (var_Cint == 153) {
            p1_print()
        } else
        if (var_Cint == 154) {
            var_ERint = 3
        } else
        if (var_Cint == 155) {
            var_ERint = 3
        } else
        if (var_Cint == 156) {
            var_Istr = String.fromCharCode(21)
            sys_chrget() 
        } else
        if (var_Cint == 157) {
            var_F5 = 0
            p1_printhash()
        } else
        if (var_Cint == 158) {
            p1_sys()
        } else
        if (var_Cint == 159) {
            p1_open()
        } else
        if (var_Cint == 160) {
            p1_close()
        } else
        if (var_Cint == 161) {
            p1_get()
        } else
        if (var_Cint == 162) {
            var_Istr = String.fromCharCode(78)
            sys_chrget() 
        } else
        if (var_Cint < 203) {
            var_ERint = 1
        } else
        if (var_Cint == 203) {
            p1_go()
        } else {
            p1_extension()
        }
        if (var_ERint == -1) {
            continue
        }
        if (var_ERint == 1) {
            err_syntax()
            continue
        }
        if (var_ERint == 2) {
            err_type_mismatch()
            continue
        }
        if (var_ERint == 3) {
            var_X1str = "NO VALID COMMAND  "
            note_error_read_next_char()
            continue
        }
        write_pcode()
        if (var_C3int == 0) {
            err_syntax()
        }
    } while (true)
}

function p1_extension() {
    var_X1str = "EXTENTIONS"
    var_X0 = var_X0 + 1
    if (var_Yint == 0) {
        print_error()
    }
    var_Istr = String.fromCharCode(71) + String.fromCharCode(var_Cint)
    var_K2int = 58
    do {
        sys_chrget3()
        if (!(var_Cint == var_K2int || var_Cint == 0)) {
            if (var_Cint == 34) {
                var_K2int = 34
            }
            var_Istr = var_Istr + String.fromCharCode(var_Cint)
            continue
        }
        if (var_Cint != 34) {
            var_Istr = var_Istr + ":" + String.fromCharCode(158) + "2082:"
            return
        }
        var_K2int = 58
        var_Istr = var_Istr + String.fromCharCode(var_Cint)
    } while (true)
}

function p1_let() {
    sys_chrget() 
    p1_var_assign()
    return
}

function p1_var_assign() {
    read_var_name()
    var_Estr = String.fromCharCode(var_Jstr.charCodeAt(0) | 64) + var_Jstr.substr( 2-1)
    var_E2int = var_L2int
    if (var_Cint != 178) {
        var_ERint = 1
        return
    }
    sys_chrget() 
    read_term()
    if (var_L2int != var_E2int) {
        var_ERint = 2
        return
    }
    var_Istr = var_Istr + var_Estr
    return
}

function p1_for() {
    sys_chrget() 
    var_FA = 1
    read_var_name()
    var_E1str = var_Jstr
    var_Estr = String.fromCharCode(var_Jstr.charCodeAt(0) | 64) + var_Jstr.substr( 2-1)
    var_E2int = var_L2int
    if (var_Cint != 178) {
        var_ERint = 1
        return
    }
    sys_chrget() 
    read_term()
    if (var_L2int != var_E2int) {
        var_ERint = 2
        return
    }
    var_Istr = var_Istr + var_Estr
    if (var_Cint != 164) {
        var_ERint = 1
        return
    }
    write_pcode()
    var_Estr = var_E1str
    if (var_Estr.length == 1) {
        var_Estr = String.fromCharCode(160) + String.fromCharCode(var_Estr.charCodeAt(0) & 31)
    }
    sys_chrget() 
    null_pcode_read_term()
    if (var_L2int != var_E2int) {
        var_ERint = 2
        return
    }
    var_E1str = var_Istr
    if (var_Cint != 169) {
        var_Estr = var_Estr + String.fromCharCode(17)
    } else {
        var_Estr = var_Estr + String.fromCharCode(18)
        sys_chrget() 
        null_pcode_read_term()
        var_E1str = var_E1str + var_Istr
        if (var_L2int != var_E2int) {
            var_ERint = 2
            return
        }
    }
    var_Istr = var_E1str + var_Estr
    return
}

function p1_next() {
    sys_chrget() 
    if (var_C3int) {
        var_Istr = String.fromCharCode(19)
        return
    }
    do {
        var_FA = 1
        read_var_name()
        if (var_Jstr.length == 1) {
            var_Jstr = String.fromCharCode(160) + String.fromCharCode(var_Jstr.charCodeAt(0) & 31)
        }
        var_Istr = var_Jstr + String.fromCharCode(20)
        write_pcode()
        if (var_C3int) {
            var_ERint = -1
            return
        }
        if (var_Cint != 44) {
            var_ERint = 1
            return
        }
        sys_chrget() 
    } while (true)
}

function p1_data() {
    if (var_Kint == 0) {
        //CLOSE 5
        //OPEN 5, var_R1int ,5, var_Ystr +":D/"+ var_A1str +",S,W"
    }
    do {
        var_K1int = 0
        var_Kstr = ""
        sys_chrget() 
        var_K2int = 58
        var_K3int = 44
        do {
            if (!(var_Cint == var_K2int || var_Cint == var_K3int || var_Cint == 0)) {
                if (var_Cint == 34) {
                    var_K2int = 0
                    var_K3int = 34
                    sys_chrget3()
                    continue
                }
                var_K1int = Math.floor(var_K1int + 1)
                var_Kstr = var_Kstr + String.fromCharCode(var_Cint)
                sys_chrget3()
                continue
            }
            if (var_Cint != 34) {
                break
            }
            var_K2int = 58
            var_K3int = 44
            sys_chrget3()
        } while (true)
        data_values = data_values + String.fromCharCode ( var_K1int )
        data_values = data_values + var_Kstr 
        var_Kint = Math.floor(var_Kint + var_K1int + 1)
        if (var_Cint != 44) {
            var_ERint = -1
            return
        }
    } while (true)
}

function p1_inputhash() {
    sys_chrget() 
    null_pcode_read_term()
    if (var_L2int) {
        var_ERint = 2
        return
    }
    var_Istr = var_Istr + String.fromCharCode(72)
    if (var_Cint != 44) {
        var_ERint = 1
        return
    }
    sys_chrget() 
    sub_1480()
    return
}

function p1_input() {
    sys_chrget() 
    var_Istr = String.fromCharCode(80)
    if (var_Cint != 34) {
        sub_1480()
        return
    }
    sub_2465()
    if (var_Cint != 59) {
        var_ERint = 1
        return
    }
    var_Istr = var_Istr + var_Jstr + String.fromCharCode(60)
    sys_chrget() 
    sub_1480()
    return
}

function sub_1480() {
    write_pcode()
    var_Istr = ""
    read_var_name()
    var_Jint = 83
    if (var_Jstr.charCodeAt(0) == 86) {
        var_ERint = 3
        return
    }
    if (var_Jstr.length == 1 && var_L2int == 0) {
        var_Jstr = String.fromCharCode(160) + String.fromCharCode(var_Jstr.charCodeAt(0) & 31)
    }
    do {
        if (var_Cint != 44) {
            var_Istr = var_Istr + var_Jstr + String.fromCharCode(var_Jint)
            return
        }
        var_Jint = Math.floor(var_Jint + 2)
        var_Istr = var_Istr + var_Jstr + String.fromCharCode(var_Jint)
        write_pcode()
        var_Istr = ""
        sys_chrget() 
        read_var_name()
        var_Jint = 81
        if (var_Jstr.charCodeAt(0) == 86) {
            var_ERint = 3
            return
        }
        if (var_Jstr.length == 1 && var_L2int == 0) {
            var_Jstr = String.fromCharCode(160) + String.fromCharCode(var_Jstr.charCodeAt(0) & 31)
        }
        if (var_Cint == 44) {
            var_Jint = Math.floor(var_Jint + 4)
        }
    } while (true)
}

function p1_dim() {
    do {
        sys_chrget() 
        var_H1 = -1
        var_Istr = ""
        read_var_name()
        if (!(var_H1 < 0)) {
            var_J1int = Math.floor(var_H1intarr[var_H1] & 255)
            var_H1intarr[var_H1] = var_J1int
            var_Istr = var_Istr + String.fromCharCode(16) + String.fromCharCode(var_J1int) + var_Fstr
            var_G1 = var_H1 * 2 + 7; total_array_size += var_G1;
            var_F = Math.floor(var_G1 / 256)
            var_J1int = Math.floor(var_G1 - var_F * 256)
            var_Istr = var_Istr + String.fromCharCode(var_F) + String.fromCharCode(var_J1int)
            write_pcode()
        }
        if (var_C3int) {
            var_ERint = -1
            return
        }
        if (var_Cint != 44) {
            var_ERint = 1
            return
        }
    } while (true)
}

function p1_read() {
    do {
        sys_chrget() 
        read_var_name()
        var_Jint = 75
        if (var_L2int) {
            var_Jint = 74
        }
        if (var_Jstr.charCodeAt(0) == 86) {
            var_ERint = 3
            return
        }
        if (var_Jstr.length == 1 && var_L2int == 0) {
            var_Jstr = String.fromCharCode(160) + String.fromCharCode(var_Jstr.charCodeAt(0) & 31)
        }
        var_Istr = var_Istr + var_Jstr + String.fromCharCode(var_Jint)
        write_pcode()
        var_Istr = ""
        if (var_C3int) {
            var_ERint = -1
            return
        }
        if (var_Cint != 44) {
            var_ERint = 1
            return
        }
    } while (true)
}

function p1_goto() {
    sys_chrget() 
    parse_branch_target1()
    return
}

function parse_branch_target1() {
    if (var_Cint < 48 || var_Cint > 57) {
        var_ERint = 1
        return
    }
    parse_branch_target2()
    return
}

function parse_branch_target2() {
    sub_2895()
    var_F1 = Math.floor(c64_parse_float(var_J1str))
    if (var_F1 < 0 || var_F1 > 64000) {
        var_ERint = 1
        return
    }
    add_branch_target_to_pcode()
    return
}

function add_branch_target_to_pcode() {
    var_F = var_F1
    var_F1 = Math.floor(var_F / 256)
    var_J1int = Math.floor(var_F - var_F1 * 256)
    var_Bintarr[var_B2int] = var_Eint + 1
    var_B2int = Math.floor(var_B2int + 1)
    var_Istr = String.fromCharCode(var_Jint) + String.fromCharCode(var_F1) + String.fromCharCode(var_J1int)
    return
}

function p1_run() {
    var_Istr = String.fromCharCode(21)
    write_pcode()
    sys_chrget() 
    var_Jint = 25
    if (var_C3int == 0) {
        parse_branch_target1()
        return
    }
    var_F1 = var_B4
    add_branch_target_to_pcode()
    return
}

function p1_if() {
    sys_chrget() 
    null_pcode_read_term()
    if (var_Cint == 137) {
        write_pcode()
        var_Jint = 82
        p1_goto()
        return
    }
    if (var_Cint != 167) {
        var_ERint = 1
        return
    }
    write_pcode()
    sys_chrget() 
    if (var_Cint == 142) {
        var_Istr = String.fromCharCode(88)
        sys_chrget() 
        return
    }
    if (var_Cint == 137) {
        var_Jint = 82
        p1_goto()
        return
    }
    if (var_Cint > 47 && var_Cint < 58) {
        var_Jint = 82
        parse_branch_target2()
        return
    }
    var_Bintarr[var_B2int] = var_Eint + 1
    var_B2int = Math.floor(var_B2int + 1)
    var_Istr = String.fromCharCode(31) + String.fromCharCode(255)
    write_pcode()
    var_Istr = ""
    var_ERint = -1
    return
}

function p1_rem() {
    sys_chrget() 
    if (var_C2int) {
        var_ERint = -1
        return
    }
    if (!(var_Cint != 42)) {
        do {
            sys_chrget() 
            if (var_C2int) {
                var_ERint = -1
                return
            }
            if (var_Cint != 42) {
                break
            }
            sys_chrget() 
            if (var_C2int) {
                var_ERint = -1
                return
            }
            if (var_Cint == 69) {
                var_Yint = 1
                break
            }
            if (var_Cint != 73 && var_Cint != 83) {
                break
            }
            var_Jint = 89
            if (var_Cint == 73) {
                var_Jint = 91
            }
            sys_chrget() 
            if (var_C2int) {
                var_ERint = -1
                return
            }
            if (var_Cint == 69) {
                var_Istr = String.fromCharCode(var_Jint)
                write_pcode()
                break
            }
            if (var_Cint == 65) {
                var_Istr = String.fromCharCode(var_Jint + 1)
                write_pcode()
                break
            }
            if (var_Cint != 80) {
                break
            }
            //REM  REM**SP00000
            for (var_F = 1; var_F <= 5; var_F++) {
                sys_chrget() 
                var_Jint = Math.floor(var_Cint - 48)
                if (var_Jint < 0 || var_Jint > 9) {
                    break
                }
                var_Iintarr[var_F] = var_Jint
            }
            var_F = 2 ^ (var_Iintarr[1] + var_Iintarr[2] - var_Iintarr[3])
            if (var_F > 255) {
                break
            }
            var_F1 = 71
            var_J1int = 2 ^ (var_Iintarr[4] + var_Iintarr[5] - 4)
            if (var_J1int < 8) {
                var_F1 = 113
            }
            if (var_J1int > 255) {
                break
            }
            var_Istr = String.fromCharCode(166) + String.fromCharCode(var_F) + String.fromCharCode(167) + String.fromCharCode(2) + String.fromCharCode(2) + String.fromCharCode(23) + String.fromCharCode(166)
            var_Istr = var_Istr + String.fromCharCode(var_F1) + String.fromCharCode(167) + String.fromCharCode(2) + String.fromCharCode(1) + String.fromCharCode(23) + String.fromCharCode(166) + String.fromCharCode(var_J1int)
            var_Istr = var_Istr + String.fromCharCode(179) + String.fromCharCode(23) + String.fromCharCode(84)
            write_pcode()
            break
        } while (true)
    }
    do {
        sys_chrget() 
        if (var_C2int) {
            var_ERint = -1
            return
        }
    } while (true)
}

function p1_on() {
    sys_chrget() 
    null_pcode_read_term()
    if (var_L2int) {
        var_ERint = 2
        return
    }
    var_Jint = 28
    if (var_Cint == 137) {
        var_Jint = 27
    } else {
        if (var_Cint != 141) {
            var_ERint = 1
            return
        }
    }
    write_pcode()
    var_Istr = String.fromCharCode(var_Jint)
    var_Jint = 0
    var_Jstr = ""
    do {
        sys_chrget() 
        sub_2895()
        var_F1 = Math.floor(c64_parse_float(var_J1str))
        if (var_F1 < 0 || var_F1 > 64000) {
            var_ERint = 1
            return
        }
        var_F = var_F1
        var_F1 = Math.floor(var_F / 256)
        var_J1int = Math.floor(var_F - var_F1 * 256)
        var_Jint = Math.floor(var_Jint + 2)
        var_Jstr = var_Jstr + String.fromCharCode(var_F1) + String.fromCharCode(var_J1int)
        var_Bintarr[var_B2int] = var_Eint + var_Jint
        var_B2int = Math.floor(var_B2int + 1)
        if (var_Cint != 44) {
            var_Istr = var_Istr + String.fromCharCode(var_Jint + 2) + var_Jstr
            return
        }
    } while (true)
}

function p1_wait() {
    sys_chrget() 
    null_pcode_read_term()
    var_Estr = var_Istr
    if (var_Cint != 44) {
        var_ERint = 1
        return
    }
    if (var_L2int) {
        var_ERint = 2
        return
    }
    sys_chrget() 
    null_pcode_read_term()
    var_Estr = var_Istr + var_Estr
    if (var_L2int) {
        var_ERint = 2
        return
    }
    if (var_C3int) {
        var_Istr = var_Estr + String.fromCharCode(76)
        return
    }
    var_Jint = 77
    sub_1845()
    return
}

function sub_1845() {
    if (var_Cint != 44) {
        var_ERint = 1
        return
    }
    sys_chrget() 
    null_pcode_read_term()
    var_Estr = var_Istr + var_Estr
    if (var_L2int) {
        var_ERint = 2
        return
    }
    var_Istr = var_Estr + String.fromCharCode(var_Jint)
    return
}

function p1_poke() {
    var_Jint = 23
    sys_chrget() 
    null_pcode_read_term()
    var_Estr = var_Istr
    if (var_L2int) {
        var_ERint = 2
        return
    }
    sub_1845()
    return
}

function p1_sys() {
    sys_chrget() 
    null_pcode_read_term()
    if (var_L2int) {
        var_ERint = 2
        return
    }
    var_Istr = var_Istr + String.fromCharCode(24)
    var_Jint = 1
    do {
        if ((var_Jint && var_C3int) || var_C2int) {
            break
        }
        if (var_Cint == 34) {
            var_Jint = 1 - var_Jint
        }
        var_Istr = var_Istr + String.fromCharCode(var_Cint)
        sys_chrget3()
    } while (true)
    var_Istr = var_Istr + String.fromCharCode(58)
    return
}

function p1_load_save_verify() {
    var_Estr = String.fromCharCode(var_Jint)
    var_F5 = 0
    sys_chrget() 
    if (!(var_C3int)) {
        null_pcode_read_term()
        if (var_L2int == 0) {
            var_ERint = 2
            return
        }
        var_Estr = var_Istr + var_Estr
        var_F5 = 1
        if (!(var_C3int)) {
            if (var_Cint != 44) {
                var_ERint = 1
                return
            }
            sys_chrget() 
            null_pcode_read_term()
            if (var_L2int) {
                var_ERint = 2
                return
            }
            var_Estr = var_Istr + var_Estr
            var_F5 = 2
            if (!(var_C3int)) {
                if (var_Cint != 44) {
                    var_ERint = 1
                    return
                }
                sys_chrget() 
                null_pcode_read_term()
                if (var_L2int) {
                    var_ERint = 2
                    return
                }
                var_Estr = var_Istr + var_Estr
                var_F5 = 3
            }
        }
    }
    var_Istr = var_Estr + String.fromCharCode(var_F5)
    return
}

function p1_def() {
    sys_chrget() 
    if (var_Cint != 165) {
        var_ERint = 1
        return
    }
    var_FA = 1
    sys_chrget() 
    var_F1int = Math.floor(var_Cint | 128)
    var_F4 = 1
    sub_2645()
    if (var_Cint != 40 || var_L3int > 0) {
        var_ERint = 1
        return
    }
    if (var_L2int) {
        var_ERint = 2
        return
    }
    var_G1 = var_G1 * 7 + 2
    var_F = Math.floor(var_G1 / 256)
    var_J1int = Math.floor(var_G1 - var_F * 256)
    var_Estr = String.fromCharCode(55) + String.fromCharCode(var_J1int) + String.fromCharCode(var_F)
    var_FA = 1
    sys_chrget() 
    read_var_name()
    if (var_Cint != 41 || var_L3int > 0) {
        var_ERint = 1
        return
    }
    if (var_L2int) {
        var_ERint = 2
        return
    }
    var_G1 = var_G1 * 7 + 2
    var_F = Math.floor(var_G1 / 256)
    var_J1int = Math.floor(var_G1 - var_F * 256)
    var_Estr = var_Estr + String.fromCharCode(var_J1int) + String.fromCharCode(var_F)
    sys_chrget() 
    if (var_Cint != 178) {
        var_ERint = 1
        return
    }
    sys_chrget() 
    null_pcode_read_term()
    var_J1int = Math.floor(var_Istr.length)
    var_Istr = var_Estr + String.fromCharCode(var_J1int + 7) + var_Istr + String.fromCharCode(57)
    return
}

function p1_printhash() {
    sys_chrget() 
    null_pcode_read_term()
    if (var_L2int) {
        var_ERint = 2
        return
    }
    if (var_C3int) {
        sub_2051()
        return
    }
    if (var_Cint != 44) {
        var_ERint = 1
        return
    }
    sys_chrget() 
    if (var_C3int) {
        sub_2051()
        return
    }
    var_Istr = var_Istr + String.fromCharCode(66)
    write_pcode()
    sub_2060()
    return
}

function sub_2051() {
    var_Jint = 66
    if (var_F5) {
        var_Jint = 68
    }
    var_Istr = var_Istr + String.fromCharCode(var_Jint)
    return
}

function p1_print() {
    var_F5 = 0
    sys_chrget() 
    if (var_C3int) {
        var_Istr = String.fromCharCode(63)
        return
    }
    sub_2060()
    return
}

function sub_2060() {
    var_Jint = 0
    var_Istr = ""
    do {
        if (var_Jint == 0 && var_Cint == 163) {
            var_Jint = 65
        }
        if (!(var_Jint == 0 && var_Cint != 163 && var_Cint != 166 && var_Cint != 59)) {
            if (!(var_Jint == 0 && var_Cint != 163 && var_Cint != 166 && var_Cint == 59)) {
                if (var_Jint == 65 || var_Jint == 0) {
                    sys_chrget() 
                    null_pcode_read_term()
                    if (var_Cint != 41) {
                        return
                    }
                }
                if (var_Jint == 0) {
                    var_Jint = 64
                }
                var_Istr = var_Istr + String.fromCharCode(var_Jint)
                write_pcode()
            }
            sys_chrget() 
            if (var_C3int == 0) {
                var_Jint = 0
                var_Istr = ""
                continue
            }
            if (var_F5) {
                var_Istr = String.fromCharCode(69)
                return
            }
            var_ERint = -1
            return
        }
        if (var_Cint == 44) {
            var_Jint = 59
            continue
        }
        null_pcode_read_term()
        if (!(var_C3int == 0)) {
            var_Jint = 62
            if (var_F5) {
                var_Jint = 67
            }
            var_Istr = var_Istr + String.fromCharCode(var_Jint)
            return
        }
        if (var_Cint == 44) {
            var_Jint = 61
            continue
        }
        var_Istr = var_Istr + String.fromCharCode(60)
        write_pcode()
        var_Jint = 0
        var_Istr = ""
    } while (true)
}

function p1_open() {
    sys_chrget() 
    var_F5 = 1
    null_pcode_read_term()
    if (var_L2int) {
        var_ERint = 2
        return
    }
    var_Estr = var_Istr + String.fromCharCode(96)
    if (!(var_C3int)) {
        if (var_Cint != 44) {
            var_ERint = 1
            return
        }
        sys_chrget() 
        null_pcode_read_term()
        if (var_L2int) {
            var_ERint = 2
            return
        }
        var_F5 = 2
        var_Estr = var_Istr + var_Estr
        if (!(var_C3int)) {
            if (var_Cint != 44) {
                var_ERint = 1
                return
            }
            sys_chrget() 
            null_pcode_read_term()
            if (var_L2int) {
                var_ERint = 2
                return
            }
            var_F5 = 3
            var_Estr = var_Istr + var_Estr
            if (!(var_C3int)) {
                if (var_Cint != 44) {
                    var_ERint = 1
                    return
                }
                sys_chrget() 
                null_pcode_read_term()
                if (var_L2int == 0) {
                    var_ERint = 2
                    return
                }
                var_F5 = 4
                var_Estr = var_Istr + var_Estr
            }
        }
    }
    var_Istr = var_Estr + String.fromCharCode(var_F5)
    return
}

function p1_close() {
    sys_chrget() 
    null_pcode_read_term()
    if (var_L2int) {
        var_ERint = 2
        return
    }
    var_Istr = var_Istr + String.fromCharCode(97)
    do {
        if (var_C3int) {
            return
        }
        sys_chrget() 
    } while (true)
}

function p1_get() {
    sys_chrget() 
    var_Estr = ""
    if (!(var_Cint != 35)) {
        sys_chrget() 
        null_pcode_read_term()
        if (var_L2int) {
            var_ERint = 2
            return
        }
        var_Estr = var_Istr + String.fromCharCode(72)
        if (var_Cint != 44) {
            var_ERint = 1
            return
        }
        sys_chrget() 
    }
    do {
        var_Istr = ""
        read_var_name()
        if (var_Jstr.length == 1 && var_L2int == 0) {
            var_Jstr = String.fromCharCode(160) + String.fromCharCode(var_Jstr.charCodeAt(0) & 31)
        }
        var_Istr = var_Istr + var_Estr + var_Jstr + String.fromCharCode(70)
        if (var_C3int) {
            return
        }
        write_pcode()
        if (var_Cint != 44) {
            var_ERint = 1
            return
        }
        sys_chrget() 
    } while (true)
}

function p1_go() {
    sys_chrget() 
    if (var_Cint != 164) {
        var_ERint = 1
        return
    }
    var_Jint = 25
    p1_goto()
    return
}

function null_pcode_read_term() {
    var_Istr = ""
    var_I = 0
    read_term()
    return
}

function read_term() {
    var_Iintarr[var_I] = 0
    var_I2intarr[var_I] = var_FX
    var_I = var_I + 1
    var_FX = -1
    do {
        var_F8 = 0
        sub_2405()
        if (var_F8) {
            sys_chrget() 
            var_FX = var_L2int
            sub_2355()
            continue
        }
        var_Istr = var_Istr + var_Jstr
        var_I1 = 0
        if (var_FX >= 0) {
            if (var_FX != var_L2int) {
                err_type_mismatch()
                return
            }
        }
        if (!(var_Cint >= 170 && var_Cint <= 179)) {
            do {
                if (var_Iintarr[var_I - 1] <= 0) {
                    break
                }
                sub_2370()
            } while (true)
            var_I = var_I - 1
            if (var_FX >= 0) {
                var_L2int = Math.floor(var_FX)
            }
            var_FX = var_I2intarr[var_I]
            return
        }
        if (!(var_Cint >= 177)) {
            var_I1 = var_Cint - 163
            if (var_L2int != 0 && var_I1 != 7 && (var_I1 <= 11 || var_Iintarr[var_I - 1] != 4)) {
                err_type_mismatch()
                return
            }
            sys_chrget() 
            var_I0 = 5
            if (var_I1 > 8) {
                var_I0 = 6
                if (var_I1 > 10) {
                    var_I0 = 8
                    if (var_I1 > 11) {
                        var_I0 = 2
                        if (var_I1 == 13) {
                            var_I0 = 1
                        }
                    }
                }
            }
        } else {
            do {
                var_I2 = 1
                if (var_Cint > 177) {
                    var_I2 = 2
                    if (var_Cint == 179) {
                        var_I2 = 4
                    }
                }
                if (var_I1 & var_I2) {
                    err_syntax()
                    return
                }
                var_I1 = var_I1 | var_I2
                sys_chrget() 
                if (var_Cint <= 176 || var_Cint >= 180) {
                    break
                }
            } while (true)
            var_I0 = 4
            if (var_I1 == 7) {
                err_syntax()
                return
            }
        }
        var_FX = var_L2int
        do {
            var_I3 = var_Iintarr[var_I - 1]
            if (var_I3 < var_I0) {
                break
            }
            sub_2370()
        } while (true)
        sub_2355()
    } while (true)
}

function sub_2355() {
    var_Iintarr[var_I] = var_I0
    var_I1intarr[var_I] = var_I1
    var_I2intarr[var_I] = 0
    if (var_I1 == 7) {
        var_I2intarr[var_I] = var_L2int
    }
    if (var_I1 == 12 || var_I1 == 13) {
        var_FX = -1
    }
    var_I = var_I + 1
    return
}

function sub_2370() {
    var_I = var_I - 1
    var_Istr = var_Istr + String.fromCharCode(var_I1intarr[var_I])
    if (!(var_I1intarr[var_I] < 12 || var_I1intarr[var_I] > 13)) {
        if (var_FX < 0) {
            var_FX = var_L2int
        }
        if (var_FX) {
            err_type_mismatch()
            return
        }
    }
    var_FX = var_I2intarr[var_I]
    return
}

function sub_2405() {
    var_L2int = 0
    if (!((var_Cint <= 47 || var_Cint >= 58) && var_Cint != 46)) {
        sub_2895()
        var_Jstr = var_J1str
        if (var_Cint == 46) {
            sys_chrget() 
            sub_2895()
            var_Jstr = var_Jstr + "." + var_J1str
        }
        if (!(var_Cint != 69)) {
            sys_chrget() 
            sub_2895()
            var_Jstr = var_Jstr + "E" + var_J1str
            if (c64_parse_float(var_J1str) >= 39) {
                err_overflow()
                var_Jstr = var_Jstr.substr(0,  var_Jstr.length - 1)
            }
        }
        var_F6 = c64_parse_float(var_Jstr)
        var_F7 = Math.floor(var_F6)
        if (!(var_F6 > 32767 || var_F6 < -32767 || var_F7 != var_F6)) {
            if (!(var_F6 < 0 || var_F6 > 31)) {
                var_F7 = 176
                if (var_F6 > 15) {
                    var_F7 = 224
                }
                var_Jstr = String.fromCharCode(var_F7 + var_F6)
                return
            }
            if (!(var_F6 < 0 || var_F6 > 255)) {
                var_Jstr = String.fromCharCode(166) + String.fromCharCode(var_F6)
                return
            }
            var_F7 = Math.floor(var_F6 / 256)
            var_J1int = Math.floor(var_F6 - var_F7 * 256)
            var_Jstr = String.fromCharCode(167) + String.fromCharCode(var_F7) + String.fromCharCode(var_J1int)
            return
        }
        var_Jstr = String.fromCharCode(168) + float2string(var_F6); return
        var_Jstr = String.fromCharCode(168)
        var_F6 = 0 /* PEEK 45 */ + 0 /* PEEK 46 */ * 256 + 2
        for (var_F7 = var_F6; var_F7 <= var_F6 + 4; var_F7++) {
            var_Jstr = var_Jstr + String.fromCharCode(0 /* PEEK var_F7 */)
        }
        return
    }
    if (var_Cint > 64 && var_Cint < 91) {
        var_F4 = 0
        var_F1int = var_Cint
        sub_2645()
        return
    }
    if (var_Cint == 170) {
        sys_chrget() 
        sub_2405()
        return
    }
    if (!(var_Cint <= 179 || var_Cint >= 203)) {
        var_Iintarr[var_I] = var_Cint - 148
        var_I = var_I + 1
        if (!(var_Cint > 199)) {
            sys_chrget() 
            if (var_Cint != 40) {
                err_syntax()
                return
            }
            sys_chrget() 
            read_term()
            var_I = var_I - 1
            var_J1int = Math.floor(var_Iintarr[var_I])
            if (var_J1int == 47 || var_J1int == 49 || var_J1int == 50) {
                var_L2int = 0
            } else {
                if (var_J1int == 36 || var_J1int == 37) {
                    var_L2int = 0
                }
                if (var_L2int) {
                    err_type_mismatch()
                    return
                }
                if (var_J1int == 48 || var_J1int == 51) {
                    var_L2int = 255
                }
            }
            if (var_Cint != 41) {
                err_syntax()
                return
            }
            var_Jstr = var_Istr + String.fromCharCode(var_J1int)
            var_Istr = ""
            sys_chrget() 
            return
        }
        sys_chrget() 
        if (var_Cint != 40) {
            err_syntax()
            return
        }
        sys_chrget() 
        read_term()
        if (var_L2int == 0) {
            err_type_mismatch()
            return
        }
        if (var_Cint != 44) {
            err_syntax()
            return
        }
        sys_chrget() 
        read_term()
        if (var_L2int) {
            err_type_mismatch()
            return
        }
        if (!(var_Iintarr[var_I - 1] < 54)) {
            if (var_Cint == 41) {
                var_Istr = var_Istr + String.fromCharCode(166) + String.fromCharCode(255)
            } else {
                if (var_Cint != 44) {
                    err_syntax()
                    return
                }
                sys_chrget() 
                read_term()
                if (var_L2int) {
                    err_type_mismatch()
                    return
                }
            }
        }
        if (var_Cint != 41) {
            err_syntax()
            return
        }
        var_L2int = 255
        var_I = var_I - 1
        var_J1int = Math.floor(var_Iintarr[var_I])
        var_Jstr = var_Istr + String.fromCharCode(var_J1int)
        var_Istr = ""
        sys_chrget() 
        return
    }
    if (var_Cint == 168) {
        var_I0 = 3
        var_I1 = 15
        var_F8 = 1
        return
    }
    if (!(var_Cint != 165)) {
        var_FA = 1
        sys_chrget() 
        var_F1int = Math.floor(var_Cint | 128)
        var_F4 = 1
        sub_2645()
        if (var_Cint != 40 || var_L3int > 0) {
            err_syntax()
            return
        }
        if (var_L2int) {
            err_type_mismatch()
            return
        }
        var_G1 = var_G1 * 7 + 2
        var_F = Math.floor(var_G1 / 256)
        var_J1int = Math.floor(var_G1 - var_F * 256)
        var_Istrarr[var_I4] = String.fromCharCode(56) + String.fromCharCode(var_F) + String.fromCharCode(var_J1int)
        var_I4 = var_I4 + 1
        sys_chrget() 
        read_term()
        if (var_Cint != 41 || var_L2int > 0) {
            err_syntax()
            return
        }
        if (var_L2int) {
            err_type_mismatch()
            return
        }
        var_I4 = var_I4 - 1
        var_Jstr = var_Istrarr[var_I4]
        sys_chrget() 
        return
    }
    if (var_Cint == 34) {
        sub_2465()
        return
    }
    if (var_Cint == 171) {
        var_I0 = 7
        var_I1 = 14
        var_F8 = 1
        return
    }
    if (var_Cint == 255) {
        var_Jstr = String.fromCharCode(170)
        var_J1int = 1
        sys_chrget() 
        return
    }
    if (var_Cint != 40) {
        err_syntax()
        return
    }
    sys_chrget() 
    read_term()
    if (var_Cint != 41) {
        err_syntax()
        return
    }
    var_Jstr = var_Istr
    var_Istr = ""
    sys_chrget() 
    return
}

function sub_2465() {
    var_J1int = 0
    var_Jstr = ""
    var_L2int = 255
    do {
        sys_chrget3()
        if (var_Cint == 34) {
            sys_chrget() 
            break
        }
        if (var_Cint == 0) {
            break
        }
        var_Jstr = var_Jstr + String.fromCharCode(var_Cint)
        var_J1int = Math.floor(var_J1int + 1)
    } while (true)
    if (var_J1int < 8) {
        var_Jstr = String.fromCharCode(232 + var_J1int) + var_Jstr
        return
    }
    var_Jstr = String.fromCharCode(231) + String.fromCharCode(var_J1int) + var_Jstr
    return
}

function read_var_name() {
    var_F4 = 1
    var_F1int = var_Cint
    sub_2645()
    return
}

function sub_2645() {
    var_Jstr = ""
    var_J1int = 0
    var_F2int = 0
    var_F = 1
    var_L2int = 0
    var_L3int = 0
    if (var_Cint < 65 || var_Cint > 90) {
        err_syntax()
        return
    }
    do {
        sys_chrget() 
        if (var_Cint == 36) {
            var_L2int = 255
            var_F2int = Math.floor(var_F2int | 128)
            sys_chrget() 
            break
        }
        if (!(var_Cint > 64 && var_Cint < 91 || var_Cint > 47 && var_Cint < 58)) {
            if (var_Cint == 37) {
                var_L3int = 128
                var_F1int = Math.floor(var_F1int | 128)
                var_F2int = Math.floor(var_F2int | 128)
                sys_chrget() 
            }
            break
        }
        if (var_F == 1) {
            var_F2int = var_Cint
            var_F = 2
        }
    } while (true)
    var_F = var_F1int * 256 + var_F2int
    if (var_F > 32767) {
        var_F = var_F - 65536
    }
    var_Fstr = String.fromCharCode(var_F1int) + String.fromCharCode(var_F2int)
    if (!(var_FA == 0 && var_Cint == 40)) {
        var_FA = 0
        var_G1 = -1
        if (!(var_G == 0)) {
            var_C5int = 10427
            var_C6int = Math.floor(var_F)
            var_C7int = Math.floor(var_G)
            sys_find_in_array() 
            //REM  10427 IS OFFSET OF G%()
            if (var_C5int >= 0) {
                var_G1 = var_C5int
            }
        }
        if (var_F == 21705) {
            var_F = 175
        } else {
            if (var_F == 21577) {
                var_F = 172
            } else {
                if (var_F == 21332) {
                    var_F = 171
                } else {
                    if (var_G1 < 0 || var_G == 0) {
                        var_Gintarr[var_G] = var_F
                        var_G1 = var_G
                        var_G = var_G + 1
                    }
                    if (var_G1 < 0) {
                        var_G1 = 0
                    }
                    if (var_G1 < 32) {
                        var_Jstr = String.fromCharCode(var_G1 + 128)
                        return
                    }
                    var_F = Math.floor(var_G1 / 256)
                    var_J1int = Math.floor(var_G1 - var_F * 256)
                    if (!(var_F > 2)) {
                        var_Jstr = String.fromCharCode(160 + var_F) + String.fromCharCode(var_J1int)
                        return
                    }
                    var_Jstr = String.fromCharCode(163) + String.fromCharCode(var_F) + String.fromCharCode(var_J1int)
                    return
                }
            }
            var_Jstr = String.fromCharCode(var_F)
            if (var_F4) {
                err_syntax()
                return
            }
        }
        if (var_F == 175 && var_F4 > 0) {
            var_F = 86
        }
        var_Jstr = String.fromCharCode(var_F)
        return
    }
    var_Istrarr[var_I4] = var_Fstr
    var_J1int = 1
    sys_chrget() 
    do {
        var_I1strarr[var_I4] = String.fromCharCode(var_J1int) + String.fromCharCode(var_L2int)
        var_I4 = var_I4 + 1
        read_term()
        if (var_L2int) {
            err_type_mismatch()
            return
        }
        var_I4 = var_I4 - 1
        var_J1int = Math.floor(var_I1strarr[var_I4].charCodeAt(0))
        var_L2int = var_I1strarr[var_I4].charCodeAt(2-1)
        if (var_Cint != 44) {
            break
        }
        var_J1int = Math.floor(var_J1int + 1)
        sys_chrget() 
    } while (true)
    if (var_Cint != 41) {
        err_syntax()
        return
    }
    var_Fstr = var_Istrarr[var_I4]
    var_F = var_Fstr.charCodeAt(0) * 256 + var_Fstr.charCodeAt(2-1)
    if (var_F > 32767) {
        var_F = var_F - 65536
    }
    sys_chrget() 
    var_G1 = -1
    if (!(var_H == 0)) {
        var_C5int = 12036
        var_C6int = Math.floor(var_F)
        var_C7int = Math.floor(var_H)
        sys_find_in_array() 
        //REM  12036 IS OFFSET OF H%()
        if (var_C5int >= 0) {
            var_G1 = var_C5int
        }
    }
    if (var_G1 < 0 || var_H == 0) {
        var_Hintarr[var_H] = var_F
        var_H1intarr[var_H] = var_J1int | 256
        var_G1 = var_H
        var_H = var_H + 1
    }
    if (var_G1 < 0) {
        var_G1 = 0
    }
    var_H1 = var_G1
    if (var_J1int != (var_H1intarr[var_G1] & 255)) {
        var_H1intarr[var_G1] = var_J1int | var_H1intarr[var_G1] & 256
        err_bad_subscript()
    }
    var_J1int = (var_G1 + 3) * 2
    if (var_J1int < 254) {
        var_Jstr = String.fromCharCode(164) + String.fromCharCode(var_J1int + 1)
        return
    }
    var_F = Math.floor(var_J1int / 256)
    var_J1int = Math.floor(var_J1int - var_F * 256)
    var_Jstr = String.fromCharCode(165) + String.fromCharCode(var_J1int) + String.fromCharCode(var_F)
    return
}

function sub_2895() {
    var_J1str = ""
    if (!(var_Cint != 170 && var_Cint != 171)) {
        if (var_Cint == 171) {
            var_J1str = "-"
        }
        sys_chrget() 
    }
    do {
        if (var_Cint < 48 || var_Cint > 57) {
            return
        }
        var_J1str = var_J1str + String.fromCharCode(var_Cint)
        sys_chrget() 
    } while (true)
}

function write_pcode() {
    var_Eint = Math.floor(var_Eint + var_Istr.length)
    pass1_result = pass1_result + var_Istr
    return
}

function pass2() {
    var_Cintarr[var_B5int] = var_Eint
    var_Istr = String.fromCharCode(79)
    if(false) {
        do {
            write_pcode()
            //GET #2, var_Istr 
            if (var_Istr == "") {
                var_Istr = String.fromCharCode(0)
            }
            if (var_ST) {
                break
            }
        } while (true)
    }
    write_pcode()
    if (var_Kint) {
        //CLOSE 5
    }
    //CLOSE 2
    //CLOSE 3
    //CLOSE 4
    var_Bintarr[var_B2int] = -32767
    if (var_Tint > 1) {
        //CLOSE 6
        //PRINT# 15,"S"+ var_Ystr +":Z/"+ var_A1str 
    } else {
        //CLOSE 6
        //OPEN 6, var_R1int ,6, var_Ystr +":Z/"+ var_A1str +",P,W"
        get_drive_status()
        //PRINT# 6, String.fromCharCode (1);
        //PRINT# 6, String.fromCharCode (8);
    }
    if (var_T8int) {
        sub_3400()
        return
    }
    var_Istr = ""
    var_H1 = 1
    if (!(var_H == 0)) {
        var_H1 = 8
        var_Z = var_H - 1
        if (var_Z < 16) {
            var_Istr = String.fromCharCode(176 + var_Z)
        } else {
            if (var_Z < 32) {
                var_Istr = String.fromCharCode(224 + var_Z)
            } else {
                var_H1 = var_H1 + 1
                if (var_Z < 256) {
                    var_Istr = String.fromCharCode(166) + String.fromCharCode(var_Z)
                } else {
                    var_H1 = var_H1 + 1
                    var_F7 = Math.floor(var_Z / 256)
                    var_F6 = var_Z - var_F7 * 256
                    var_Istr = String.fromCharCode(167) + String.fromCharCode(var_F7) + String.fromCharCode(var_F6)
                }
            }
        }
        var_Istr = var_Istr + String.fromCharCode(16) + String.fromCharCode(1) + String.fromCharCode(218) + String.fromCharCode(170) + String.fromCharCode(0) + String.fromCharCode(0)
        for (var_F = 0; var_F <= var_Z; var_F++) {
            if (!(var_H1intarr[var_F] < 256)) {
                var_J1int = Math.floor(var_H1intarr[var_F] & 255)
                if (var_J1int == 1) {
                    var_H1 = var_H1 + 7
                } else {
                    var_F1 = var_Hintarr[var_F]
                    if (var_F1 < 0) {
                        var_F1 = var_F1 + 65536
                    }
                    var_L2int = Math.floor(var_F1 / 256)
                    var_L3int = Math.floor(var_F1 - var_L2int * 256)
                    var_Estr = ""
                    if (var_L3int > 127) {
                        var_Estr = "$"
                        if (var_L2int > 127) {
                            var_Estr = "%"
                        }
                    }
                    var_Jstr = String.fromCharCode(var_L3int & 127)
                    if (var_L3int & 127 == 0) {
                        var_Jstr = ""
                    }
                    var_Estr = String.fromCharCode(var_L2int & 127) + var_Jstr + var_Estr
                    var_X3 = var_X3 + 1
                    c64_print(   var_Xstr .substr(0, 5+ var_X2 ))
                    c64_print(  "   ")
                    c64_print( "?BAD SUBSCRIPT ERROR FRM ")
                    c64_print(  var_Estr )
                    sub_3380()
                }
            }
        }
    }
    //PRINT# 15,"S"+ var_Ystr +":"+ var_A2str 
    //OPEN 3, var_R1int ,3, var_Ystr +":"+ var_A2str +",P,W"
    get_drive_status()
    if (!(var_Tint >= 3 && var_T2int != 0)) {
        //OPEN 7, var_Rint ,7,"RUNTIME,P,R"
        var_F=var_T1int+1; if(false) {
            //GET #7, var_Cstr 
            if (var_Cstr == "") {
                var_Cstr = String.fromCharCode(0)
            }
            pass2_result = pass2_result + var_Cstr 
        }
        //CLOSE 7
        var_Cint = Math.floor(var_F)
    } else {
        var_F = var_T1int + 1
        write_f_pcode()
        var_Cint = Math.floor(var_F)
    }
    var_F = var_Cint + 13 + var_H1 + var_Kint + var_Eint
    if (var_Tint == 4) {
        var_F = var_Cint + 13 + var_H1 + var_T7int
    }
    write_f_pcode()
    var_F = var_F + var_G * 7
    write_f_pcode()
    write_f_pcode()
    var_F = var_Cint + 12
    write_f_pcode()
    var_F = var_F + var_H1
    write_f_pcode()
    var_F = var_F + var_Kint + 1
    write_f_pcode()
    var_Cint = Math.floor(var_F)
    pass2_result = pass2_result + var_Istr 
    if (!(var_H1 < 9)) {
        for (var_F = 0; var_F <= var_H - 1; var_F++) {
            if (!(var_H1intarr[var_F] < 256)) {
                var_J1int = Math.floor(var_H1intarr[var_F] & 255)
                if (!(var_J1int > 1)) {
                    var_F1 = var_Hintarr[var_F]
                    if (var_F1 < 0) {
                        var_F1 = var_F1 + 65536
                    }
                    var_L2int = Math.floor(var_F1 / 256)
                    var_L3int = Math.floor(var_F1 - var_L2int * 256)
                    var_F5 = var_F * 2 + 7
                    var_F6 = Math.floor(var_F5 / 256)
                    var_F5 = var_F5 - var_F6 * 256
                    pass2_result = pass2_result + String.fromCharCode (186)
                    pass2_result = pass2_result + String.fromCharCode (16)
                    pass2_result = pass2_result + String.fromCharCode (1)
                    pass2_result = pass2_result + String.fromCharCode ( var_L2int )
                    pass2_result = pass2_result + String.fromCharCode ( var_L3int )
                    pass2_result = pass2_result + String.fromCharCode ( var_F6 )
                    pass2_result = pass2_result + String.fromCharCode ( var_F5 )
                }
            }
        }
    }
    pass2_result = pass2_result + String.fromCharCode (22)
    if (!(var_Kint == 0)) {
        //OPEN 8, var_R1int ,2, var_Ystr +":D/"+ var_A1str 
        for (var_C = 1; var_C <= var_Kint; var_C++) {
            var_Bstr  = data_values.substr(data_index, 1); data_index++
            if (var_Bstr == "") {
                var_Bstr = String.fromCharCode(0)
            }
            pass2_result = pass2_result + var_Bstr 
        }
        //CLOSE 8
    }
    pass2_result = pass2_result + String.fromCharCode (255)
    var_Jint = 0
    var_J1int = 0
    //OPEN 2, var_R1int ,2, var_Ystr +":P/"+ var_A1str +",S,R"
    c64_print( "PASS2  ")
    var_N1int = Math.floor(var_Nint + 111)
    var_N2int = Math.floor(var_N1int + 15)
    for (var_L = 0; var_L <= var_Eint - 1; var_L++) {
        var_Lint = Math.floor(var_L)
        sys_p2_char_read() 
        if (!(var_Lint < var_Cintarr[var_Jint] || var_Jint == var_B5int)) {
            do {
                if (var_Jint < var_B5int) {
                    c64_print( "")
                    c64_print(  var_Dintarr[ var_Jint ]+32767)
                    var_Jint = Math.floor(var_Jint + 1)
                }
                if (var_Lint < var_Cintarr[var_Jint]) {
                    break
                }
            } while (true)
            if (!(var_Tint > 1)) {
                var_L3int = (var_Lint + var_Cint) / 256
                var_L2int = Math.floor(var_Lint + var_Cint - var_L3int * 256)
                c64_print("P-Code offset: " + (var_L2int+var_L3int*256))
                //PRINT# 6, String.fromCharCode (8);
                //PRINT# 6, String.fromCharCode ( var_L2int );
                //PRINT# 6, String.fromCharCode ( var_L3int );
                //PRINT# 6,"=";
                //PRINT# 6, var_Dintarr[ var_Jint -1]+32767;
                //PRINT# 6, String.fromCharCode (0);
            }
        }
        if (!(var_Lint != var_Bintarr[var_J1int])) {
            var_J1int = Math.floor(var_J1int + 1)
            if (var_C1int == 255) {
                var_C1int = Math.floor(var_Cintarr[var_Jint] - var_Lint + 1)
            } else {
                var_L2int = var_C1int
                sys_p2_char_read() 
                var_L2int = Math.floor(var_L2int * 256 + var_C1int - 32767)
                sub_3290()
                var_C1int = Math.floor(var_L2int / 256)
                sys_p2_char_write() 
                var_Lint = Math.floor(var_Lint + 1)
                var_L = var_Lint
                var_C1int = Math.floor(var_L2int - var_C1int * 256)
            }
        }
        sys_p2_char_write() 
    }
    //CLOSE 2
    if (!(var_Tint == 4 && var_T2int > 0)) {
        if (var_Tint == 4) {
            var_F = var_Kint + var_Eint
            if (var_F < var_T7int) {
                for (var_F = var_F; var_F <= var_T7int - 1; var_F++) {
                    pass2_result = pass2_result + String.fromCharCode (79)
                }
            }
        }
        if (var_Tint == 1) {
            //PRINT# 6, String.fromCharCode (0);
            //PRINT# 6, String.fromCharCode (0);
            //CLOSE 6
        }
        var_Istr = String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(0) + String.fromCharCode(0)
        for (var_F = 0; var_F <= var_G - 1; var_F++) {
            var_F1 = var_Gintarr[var_F]
            if (var_F1 < 0) {
                var_F1 = var_F1 + 65536
            }
            var_L2int = Math.floor(var_F1 / 256)
            var_L3int = Math.floor(var_F1 - var_L2int * 256)
            pass2_result = pass2_result + String.fromCharCode ( var_L2int )
            pass2_result = pass2_result + String.fromCharCode ( var_L3int )
            pass2_result = pass2_result + var_Istr 
        }
    }
    //CLOSE 3
    c64_print(   var_Xstr .substr(0, 5+ var_X2 ))
    c64_print(  "   ")
    c64_print( "ERRORS:")
    c64_print(  var_X1 + var_X3 )
    c64_print( "     EXTENSIONS:")
    c64_print(  var_X0 )
    //PRINT# 15,"S"+ var_Ystr +":P/"+ var_A1str 
    //PRINT# 15,"S"+ var_Ystr +":D/"+ var_A1str 
    return
}

function sub_3290() {
    var_C5int = 7218
    var_C6int = var_L2int
    var_C7int = var_B5int
    sys_find_in_array() 
    //REM  7218 IS OFFSET OF D%()
    if (var_C5int < 0) {
        var_C5int = 0
        err_undefd_statement()
    }
    var_L2int = Math.floor(var_Cintarr[var_C5int] + var_Cint)
    return
}

function write_f_pcode() {
    var_F1 = Math.floor(var_F / 256)
    var_L2int = Math.floor(var_F - var_F1 * 256)
    pass2_result = pass2_result + String.fromCharCode ( var_L2int )
    pass2_result = pass2_result + String.fromCharCode ( var_F1 )
    return
}

function get_drive_status() {
    //INPUT  var_R3int , var_A , var_A5str 
    if (var_A == 0) {
        return
    }
    var_X2 = 15
    c64_print(   var_Xstr .substr(0, 6+ var_X2 ))
    c64_print(  "   ")
    c64_print( "")
    c64_print(  var_A )
    c64_print(  var_A5str )
    //CLOSE 2
    //CLOSE 3
    //CLOSE 4
    //CLOSE 15
    console.log('END')
}

function err_syntax() {
    var_X1str = "SYNTAX ERROR"
    note_error_read_next_char()
    return
}

function err_undefd_statement() {
    var_X1str = "UNDEF'D STATEMENT ERROR"
    var_B1 = var_Dintarr[var_Jint - 1] + 32767
    var_X3 = var_X3 + 1
    print_error()
    return
}

function err_bad_subscript() {
    var_X1str = "BAD SUBSCRIPT ERROR"
    var_X3 = var_X3 + 1
    print_error()
    return
}

function err_overflow() {
    var_X1str = "OVERFLOW ERROR"
    var_X3 = var_X3 + 1
    print_error()
    return
}

function err_type_mismatch() {
    var_X1str = "TYPE MISMATCH ERROR"
    note_error_read_next_char()
    return
}

function note_error_read_next_char() {
    if (var_X5) {
        return
    }
    var_X1 = var_X1 + 1
    var_X5 = 1
    print_error()
    do {
        sys_chrget() 
        if (var_C3int) {
            return
        }
    } while (true)
}

function print_error() {
    c64_print(   var_Xstr .substr(0, 5+ var_X2 ))
    c64_print(  "   ")
    c64_print( "?")
    c64_print(  var_X1str )
    c64_print( " IN")
    c64_print(  var_B1 )
    sub_3380()
    return
}

function sub_3380() {
    var_X2 = var_X2 + 1
    if (var_X2 == 18) {
        var_X4 = var_X4 + 40
        var_X2 = 0
        if (var_X4 > 40) {
            var_X4 = 0
        }
    }
    return
}

function print_screen_title() {
    c64_print( "")
    c64_print(  "   ")
    c64_print( "SKYLES - BLITZ")
    c64_print(  "   ")
    c64_print(  var_Tstr )
    return
}

function sub_3400() {
    //PRINT# 15,"S"+ var_Ystr +":P/"+ var_A1str 
    //PRINT# 15,"S"+ var_Ystr +":D/"+ var_A1str 
    var_F = var_Eint + var_Kint
    if (var_T7int < var_F) {
        var_T7int = Math.floor(var_F)
    }
    return
}

function user_prompt_mode() {
    c64_print( "1 = SINGLE FLOPPY")
    c64_print( "2 = DUAL DRIVE FLOPPY")
    c64_print( "3 = 2 FLOPPIES WITH DIFFERENT ADDR'S  ")
    do {
        //GET  var_Tint 
        if (var_Tint >= 1 && var_Tint <= 3) {
            break
        }
    } while (true)
    if (var_Tint == 1) {
        var_Ystr = "0"
    } else {
        if (var_Tint == 2) {
            var_Astr = "DRIVE 0"
            var_Bstr = "DRIVE 1"
        } else {
            user_prompt_drives()
            var_Ystr = "0"
            var_Astr = "DEVICE" + (var_Rint)
            var_Bstr = "DEVICE" + (var_R1int)
        }
        print_screen_title()
        c64_print( "")
        c64_print(  "   ")
        c64_print( "SELECT MODE :")
        c64_print( "1. =//ONE FILE TO DRIVE 1      ")
        c64_print( "2. =  ALL FILES FROM     ")
        c64_print(  var_Astr )
        c64_print( " TO ")
        c64_print( "      BLANK DISKETTE IN ")
        c64_print(  var_Bstr )
        c64_print( " WTH")
        c64_print( "      COMP-MACHINECODE      ")
        c64_print( "3. =  ALL FILES FROM     ")
        c64_print(  var_Astr )
        c64_print( " TO ")
        c64_print( "      BLANK DISKETTE IN ")
        c64_print(  var_Bstr )
        c64_print( ", BUT")
        c64_print( "      FIRST FILE WITH COMP-BLOCK    ")
        c64_print( "4. =  ALL FILES FROM     ")
        c64_print(  var_Astr )
        c64_print( " TO ")
        c64_print( "      BLANK DISKETTE IN ")
        c64_print(  var_Bstr )
        c64_print( " WTH")
        c64_print( "      OVERLAY")
        c64_print(  var_Xstr )
        c64_print( "PLEASE SELECT!")
        do {
            //GET  var_Tint 
            if (var_Tint >= 1 && var_Tint <= 4) {
                break
            }
        } while (true)
    }
    var_Tstr = "(PROG. MODE :" + (var_Tint) + ")"
    if (var_Tint == 4) {
        var_T8int = 1
    }
    print_screen_title()
    if (var_Tint == 1) {
        return
    }
    c64_print( "N ")
    c64_print(  var_Astr )
    c64_print( " INSERT DISKETTE WITH SOURCE FOR COMPILATION     ")
    c64_print( "PRESS    Y  WHEN READY ")
    do {
        //GET  var_Astr 
        if (var_Astr == "Y") {
            break
        }
    } while (true)
    //PRINT# 14,"I0"
    var_R3int = 14
    get_drive_status()
    var_R3int = 15
    c64_print( "N ")
    c64_print(  var_Bstr )
    c64_print( " INSERT BLANK DISKETTE ! ")
    c64_print( "WANT TO NEW DISKETTE            YES/NO ")
    do {
        //GET  var_Astr 
        if (var_Astr == "Y" || var_Astr == "N") {
            break
        }
    } while (true)
    if (!(var_Astr != "Y")) {
        c64_print( "FORMATTING DISKETTE !    ")
        //OPEN 9, var_Rint ,0,"$0"
        var_R3int = 14
        get_drive_status()
        var_R3int = 15
        var_A = 1
        do {
            //GET #9, var_Astr 
            var_A = var_A + 1
            if (var_Astr == String.fromCharCode(34) || var_A > 30) {
                break
            }
        } while (true)
        var_Bstr = ""
        var_A = 1
        do {
            //GET #9, var_Astr 
            var_A = var_A + 1
            if (var_Astr == String.fromCharCode(34) || var_A > 16) {
                break
            }
            var_Bstr = var_Bstr + var_Astr
        } while (true)
        do {
            if (RIGHT$(var_Bstr, 1) != " ") {
                break
            }
            var_Bstr = var_Bstr.substr(0,  var_Bstr.length - 1)
        } while (true)
        //GET #9, var_Astr 
        //GET #9, var_Astr 
        //GET #9, var_Astr 
        //GET #9, var_B1str 
        var_B1str = var_Astr + var_B1str
        //CLOSE 9
        //PRINT# 15,"N";
        //PRINT# 15, var_Ystr ;
        //PRINT# 15,":";
        //PRINT# 15, var_Bstr ;
        //PRINT# 15,",";
        //PRINT# 15, var_B1str 
        get_drive_status()
    }
    //PRINT# 15,"I";
    //PRINT# 15, var_Ystr 
    get_drive_status()
    var_T2int = 0
    var_T3int = 0
    read_drive_directory_entry()
    return
}

function read_drive_directory_entry() {
    //OPEN 9, var_Rint ,0,"$0"
    if (!(var_T3int)) {
        for (var_T3int = 1; var_T3int <= 6; var_T3int++) {
            //GET #9, var_Astr 
        }
        do {
            //GET #9, var_Astr 
            var_T3int = Math.floor(var_T3int + 1)
            if (var_Astr == "" || var_T3int > 33) {
                break
            }
        } while (true)
    } else {
        for (var_T4int = 1; var_T4int <= var_T3int; var_T4int++) {
            //GET #9, var_Astr 
        }
    }
    var_Astr = ""
    var_B1str = ""
    var_T5int = 0
    for (var_T4int = 1; var_T4int <= 4; var_T4int++) {
        //GET #9, var_Bstr 
        var_T3int = Math.floor(var_T3int + 1)
        if ((var_ST)) {
            var_T3int = 0
            //CLOSE 9
            return
        }
    }
    //GET #9, var_Bstr 
    var_T3int = Math.floor(var_T3int + 1)
    if ((var_ST)) {
        var_T3int = 0
        //CLOSE 9
        return
    }
    if (var_Bstr == "") {
      //GOTO 3690
    }
    var_T4int = Math.floor(var_Bstr.charCodeAt(0))
  //ON var_T5int GOTO 3670, 3680
    if (var_T4int == 34) {
        var_T5int = 1
    }
  //GOTO 3645
    if (var_T4int == 34) {
        var_T5int = 2
      //GOTO 3645
    }
    var_Astr = var_Astr + var_Bstr
  //GOTO 3645
    if (var_T4int > 32) {
        var_B1str = var_B1str + var_Bstr
    }
  //GOTO 3645
    if (var_B1str == "PRG") {
        //CLOSE 9
        return
    }
  //GOTO 3630
    var_T3int = 0
    //CLOSE 9
    return
}

function user_prompt_drives() {
    var_R1int = 9
    print_screen_drives()
    c64_print(   var_Xstr .substr(0, 15))
    c64_print(  "   ")
    //INPUT#  var_Rint 
    if (var_Rint < 4 || var_Rint > 15) {
      //GOTO 3725
    }
    print_screen_drives()
    c64_print(   var_Xstr .substr(0, 17))
    c64_print(  "   ")
    //INPUT#  var_R1int 
    if (var_R1int < 4 || var_R1int > 15) {
      //GOTO 3735
    }
    if (var_Rint == var_R1int) {
      //GOTO 3725
    }
    print_screen_drives()
    return
}

function print_screen_drives() {
    c64_print(   var_Xstr .substr(0, 15))
    c64_print( "DEVICE-NBR. SOURCE PROG. :  ")
    c64_print(  var_Rint )
    c64_print(   var_Xstr .substr(0, 17))
    c64_print( "DEVICE-NBR. COMPILED PROG. :")
    c64_print(  var_R1int )
    return
}let runtime = new Uint8Array([
0x01,0x08,0x1a,0x08,0x01,0x00,0x9e,0x32,0x30,0x37,0x36,0x14,0x14,0x14,0x14,0x14,
0x14,0x14,0x14,0x14,0x42,0x4c,0x49,0x54,0x5a,0x21,0x00,0x00,0x00,0x4c,0x92,0x0c,
0x4c,0xa7,0x0e,0x4c,0x81,0x0e,0x09,0x09,0x1e,0x1b,0x1b,0x1c,0x1c,0x0c,0x0c,0x18,
0x18,0x1d,0x1d,0x1c,0x1c,0x1d,0x0c,0x1d,0x15,0x15,0x15,0x15,0x15,0x15,0x15,0x15,
0x15,0x15,0x15,0x15,0x15,0x15,0x15,0x15,0x15,0x15,0x14,0x16,0x17,0x17,0x17,0x1d,
0x1d,0x1d,0x0e,0x19,0x18,0x18,0x18,0x19,0x19,0x19,0x19,0x18,0x19,0x19,0x16,0x0e,
0x16,0x0e,0x18,0x18,0x18,0x18,0x0e,0x0e,0x1a,0x1a,0x1c,0x1a,0x1b,0x1a,0x0d,0x1a,
0x1d,0x19,0x1a,0x1a,0x1a,0x1e,0x1e,0x1e,0x1f,0x19,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,
0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x97,0xae,0x07,0x74,0x62,0x2a,0x0a,
0x80,0xa6,0x32,0x56,0x1c,0x0f,0xe3,0xe3,0x30,0xa0,0x72,0x66,0x49,0x36,0x24,0x24,
0x95,0x24,0x24,0x24,0x24,0x24,0x24,0x24,0x24,0x85,0x9a,0xfd,0xc8,0xfe,0x7a,0x74,
0x74,0x41,0x8d,0xc2,0x43,0xcb,0x60,0xda,0xda,0xda,0x9e,0x6d,0x6d,0xba,0xda,0xba,
0xb0,0xcd,0x08,0xb4,0x9a,0x6b,0x6b,0x32,0x32,0x9d,0xa0,0x12,0x5c,0xcc,0x1d,0x1a,
0x1d,0xfe,0x5c,0x5c,0xfd,0x06,0x00,0x09,0xa0,0xa2,0x9f,0x3d,0xda,0x75,0x75,0x75,
0x76,0x75,0x75,0x75,0x75,0x75,0x75,0x75,0x74,0x75,0x75,0x77,0x00,0x07,0x0e,0x15,
0x1c,0x23,0x2a,0x31,0x38,0x3f,0x46,0x4d,0x54,0x5b,0x62,0x69,0x70,0x77,0x7e,0x85,
0x8c,0x93,0x9a,0xa1,0xa8,0xaf,0xb6,0xbd,0xc4,0xcb,0xd2,0xd9,0x27,0x03,0x00,0x00,
0x10,0xe8,0x64,0x0a,0x6a,0x53,0x2b,0x12,0x7b,0xb8,0xb8,0xba,0xbb,0xbf,0xa0,0x02,
0xa9,0x20,0x24,0x64,0x10,0x05,0x20,0xc9,0x0d,0xa9,0x2d,0x99,0xfe,0x00,0x84,0x71,
0xa2,0x00,0x86,0x62,0xa5,0x64,0xf0,0x0c,0xc9,0x27,0xb0,0x13,0xe8,0xc9,0x03,0xb0,
0x0e,0xe8,0x90,0x0b,0xa5,0x65,0xf0,0x4b,0xa2,0x02,0xc9,0x64,0xb0,0x01,0xe8,0xbd,
0x0b,0x09,0x85,0x22,0xbd,0x0f,0x09,0x85,0x23,0xa0,0xff,0x38,0xc8,0xa5,0x65,0xe5,
0x23,0x85,0x65,0xa5,0x64,0xe5,0x22,0x85,0x64,0xb0,0xf1,0xa5,0x65,0x65,0x23,0x85,
0x65,0xa5,0x64,0x65,0x22,0x85,0x64,0xa5,0x62,0xd0,0x05,0x98,0xf0,0x0c,0xe6,0x62,
0x98,0x09,0x30,0xa4,0x71,0x99,0xff,0x00,0xe6,0x71,0xe8,0xe0,0x04,0x90,0xc0,0xa4,
0x71,0xa5,0x65,0x09,0x30,0x4c,0x04,0xbf,0xa5,0x0e,0x10,0x06,0x20,0xc9,0x0d,0x4c,
0xcb,0x0e,0xa5,0x61,0xf0,0x06,0xa5,0x66,0x49,0xff,0x85,0x66,0x4c,0xcb,0x0e,0xa5,
0x0e,0x30,0x03,0x20,0x42,0x14,0xa5,0x64,0x49,0xff,0x85,0x64,0xa5,0x65,0x49,0xff,
0x85,0x65,0x4c,0xcb,0x0e,0x4c,0x58,0xb6,0xaa,0xd0,0x04,0xa6,0x6f,0xd0,0x06,0xa6,
0x65,0xd0,0x04,0xa6,0x64,0x86,0x16,0xa5,0x61,0x85,0x6e,0xb1,0x6f,0x85,0x69,0x18,
0x65,0x61,0xb0,0xe1,0x85,0x61,0xf0,0x66,0xa5,0x33,0xa4,0x34,0x38,0xe5,0x61,0xb0,
0x01,0x88,0xc4,0x32,0xd0,0x02,0xc5,0x31,0xb0,0x03,0x20,0x7a,0x1f,0x85,0x33,0x85,
0x62,0x85,0x35,0x84,0x34,0x84,0x63,0x84,0x36,0xa0,0x02,0xb1,0x6f,0x85,0x23,0x88,
0xb1,0x6f,0x85,0x22,0xa4,0x69,0xf0,0x19,0x88,0xf0,0x07,0xb1,0x22,0x91,0x35,0x88,
0xd0,0xf9,0xb1,0x22,0x91,0x35,0xa5,0x69,0x18,0x65,0x35,0x85,0x35,0x90,0x02,0xe6,
0x36,0xa0,0x02,0xb1,0x64,0x85,0x23,0x88,0xb1,0x64,0x85,0x22,0xa4,0x6e,0xf0,0x0e,
0x88,0xf0,0x07,0xb1,0x22,0x91,0x35,0x88,0xd0,0xf9,0xb1,0x22,0x91,0x35,0x4c,0x0c,
0x18,0xa6,0x65,0xd0,0x1d,0xa6,0x64,0x86,0x16,0xa6,0x63,0xe4,0x34,0xd0,0x13,0xa6,
0x62,0xe4,0x33,0xd0,0x0d,0xa5,0x61,0xf0,0x09,0x18,0x65,0x33,0x85,0x33,0x90,0x02,
0xe6,0x34,0xb1,0x6f,0xaa,0xc8,0xb1,0x6f,0x85,0x6a,0xc8,0xb1,0x6f,0x85,0x6b,0xa5,
0x70,0xd0,0x1c,0xa5,0x6f,0x85,0x16,0xa5,0x6b,0xc5,0x34,0xd0,0x12,0xa5,0x6a,0xc5,
0x33,0xd0,0x0c,0x8a,0xf0,0x09,0x18,0x65,0x6a,0x85,0x33,0x90,0x02,0xe6,0x34,0xe4,
0x61,0xf0,0x08,0xa0,0x04,0x90,0x04,0xa0,0x01,0xa6,0x61,0x84,0x66,0xa0,0xff,0xe8,
0xc8,0xca,0xf0,0x20,0xb1,0x6a,0xd1,0x62,0xf0,0xf6,0xa9,0x01,0xb0,0x02,0xa9,0x04,
0x25,0x3c,0xf0,0x02,0xa9,0xff,0x85,0x64,0x85,0x65,0xa9,0x80,0x85,0x0e,0x0a,0x85,
0x0d,0x4c,0xc9,0x0e,0xa5,0x66,0x10,0xe8,0xa4,0x69,0xd0,0x22,0xa4,0x61,0xf0,0x08,
0xa5,0x66,0x30,0x07,0xa9,0x04,0xd0,0x05,0xa9,0x02,0x2c,0xa9,0x01,0x25,0x3c,0xf0,
0x02,0xa9,0xff,0x85,0x64,0x85,0x65,0xa9,0x80,0x85,0x0e,0x4c,0xc9,0x0e,0xa5,0x61,
0xd0,0x06,0xa5,0x6e,0x30,0xde,0x10,0xe3,0xa5,0x66,0x45,0x6e,0x30,0xd2,0xc4,0x61,
0xd0,0x1c,0xa5,0x6a,0xc5,0x62,0xd0,0x16,0xa5,0x6b,0xc5,0x63,0xd0,0x10,0xa5,0x6c,
0xc5,0x64,0xd0,0x0a,0xa9,0x7f,0xc5,0x70,0xa5,0x6d,0xe5,0x65,0xf0,0xba,0x90,0xb0,
0xb0,0xd0,0xa0,0x00,0x84,0x69,0x84,0x6a,0x84,0x6b,0xa2,0x90,0xa5,0x6c,0x85,0x6e,
0x10,0x12,0x49,0xff,0x85,0x6c,0xa5,0x6d,0x49,0xff,0x85,0x6d,0xe6,0x6d,0xd0,0x02,
0xe6,0x6c,0xa5,0x6c,0xd0,0x08,0xa2,0x88,0xa5,0x6d,0xf0,0x16,0x84,0x6d,0x30,0x06,
0xca,0x06,0x6d,0x2a,0x10,0xfa,0x85,0x6a,0xa5,0x6d,0x85,0x6b,0x86,0x69,0x84,0x6c,
0x84,0x6d,0xa5,0x0e,0x10,0x03,0x20,0xff,0x13,0xa4,0x3c,0xc0,0x07,0xb0,0x03,0x4c,
0xd7,0x0a,0xb9,0x0c,0x09,0x85,0x55,0xb9,0x11,0x09,0x85,0x56,0xa5,0x6e,0x45,0x66,
0x85,0x6f,0xa5,0x61,0x20,0x54,0x00,0x4c,0xc9,0x0e,0xa2,0x02,0xa5,0x6c,0xc5,0x64,
0xd0,0x06,0xa4,0x6d,0xc4,0x65,0xf0,0x09,0xca,0x45,0x64,0x30,0x12,0xb0,0x02,0xa2,
0x04,0x8a,0x25,0x3c,0xf0,0x02,0xa9,0xff,0x85,0x64,0x85,0x65,0x4c,0xc9,0x0e,0xb0,
0xee,0x90,0xee,0xa5,0x61,0xd0,0x04,0x85,0x64,0xf0,0x44,0x24,0x70,0x10,0x03,0x20,
0x1b,0xbc,0xa5,0x64,0x05,0x65,0xd0,0x50,0xa5,0x61,0xc9,0x81,0x90,0x4a,0xe9,0x90,
0x10,0x46,0xc9,0xf9,0xb0,0x16,0x69,0x07,0xaa,0xa5,0x63,0xd0,0x3b,0xa5,0x62,0xe8,
0xf0,0x06,0x4a,0xb0,0x33,0xe8,0xd0,0xfa,0x86,0x64,0xf0,0x13,0xaa,0xa5,0x63,0x85,
0x28,0xa5,0x62,0x4a,0x66,0x28,0xb0,0x20,0xe8,0xd0,0xf8,0x85,0x64,0xa5,0x28,0x85,
0x65,0x24,0x66,0x10,0x03,0x20,0xc9,0x0d,0xa9,0x80,0x85,0x0e,0xa6,0x3c,0xe0,0x07,
0xb0,0x03,0x4c,0x99,0x0b,0x4c,0xfe,0x0c,0x4c,0x31,0x0b,0x20,0x5c,0x0c,0xa5,0x0e,
0x30,0x03,0x20,0x42,0x14,0x46,0x3c,0xb0,0x0c,0xa5,0x6c,0x25,0x64,0x85,0x64,0xa5,
0x6d,0x25,0x65,0x90,0x0a,0xa5,0x6c,0x05,0x64,0x85,0x64,0xa5,0x6d,0x05,0x65,0x85,
0x65,0x4c,0xc9,0x0e,0x4c,0x48,0xb2,0xa9,0x00,0x85,0x6b,0xf0,0x13,0xa5,0x69,0xc9,
0x81,0x90,0xf4,0xe9,0x90,0x10,0xed,0xaa,0xa5,0x6a,0x4a,0x66,0x6b,0xe8,0xd0,0xfa,
0x06,0x6e,0x90,0x02,0x49,0xff,0x85,0x6c,0xa5,0x6b,0x90,0x02,0x49,0xff,0x85,0x6d,
0x60,0x20,0xe7,0xff,0x20,0xb1,0x0c,0xa5,0x39,0x85,0x50,0xa5,0x3a,0x85,0x51,0xa0,
0x06,0xd0,0x05,0x20,0xe4,0x0c,0xa0,0x0a,0xb9,0x93,0x1f,0xbe,0x94,0x1f,0x4c,0x23,
0x1d,0x20,0xf3,0x0c,0x4c,0xac,0x0e,0xa5,0x50,0x85,0x39,0xa5,0x51,0x85,0x3a,0x4c,
0xac,0x0e,0xa2,0x05,0xbd,0x93,0x1f,0x95,0x2d,0xca,0x10,0xf8,0xa6,0x2e,0x86,0x60,
0x85,0x5f,0xe4,0x30,0xd0,0x04,0xc5,0x2f,0xf0,0x13,0xa0,0x01,0xa9,0x00,0xc8,0x91,
0x5f,0xc0,0x06,0xd0,0xf9,0x98,0x65,0x5f,0x90,0xe6,0xe8,0xb0,0xe1,0xa5,0x37,0xa4,
0x38,0x85,0x33,0x84,0x34,0x68,0xa8,0x68,0xa2,0xf8,0x9a,0x48,0x98,0x48,0xa9,0x00,
0x85,0x3b,0x85,0x11,0xad,0x9b,0x1f,0x85,0x41,0xad,0x9c,0x1f,0x85,0x42,0x60,0xf0,
0x11,0xe0,0x08,0xd0,0x4e,0xa5,0x6d,0xe5,0x65,0x85,0x65,0xa5,0x6c,0xe5,0x64,0x4c,
0x1c,0x0d,0x18,0xa5,0x6d,0x65,0x65,0x85,0x65,0xa5,0x6c,0x65,0x64,0x85,0x64,0x70,
0x03,0x4c,0xc9,0x0e,0xa2,0x00,0x86,0x62,0x86,0x63,0x86,0x66,0x90,0x05,0xc6,0x66,
0x20,0xc9,0x0d,0xa9,0x00,0x85,0x0e,0x85,0x70,0x20,0xdb,0xbc,0x4c,0xc9,0x0e,0xa5,
0x62,0x05,0x63,0xd0,0xee,0xa5,0x64,0x30,0xea,0xa5,0x66,0x10,0x03,0x20,0xc9,0x0d,
0x4c,0xc9,0x0e,0xa5,0x64,0x45,0x6c,0x85,0x66,0xa5,0x64,0x10,0x03,0x20,0xc9,0x0d,
0xa5,0x6c,0x10,0x10,0x49,0xff,0x85,0x6c,0xa5,0x6d,0x49,0xff,0x85,0x6d,0xe6,0x6d,
0xd0,0x02,0xe6,0x6c,0xa5,0x64,0xa6,0x65,0xc5,0x6c,0x90,0x0a,0xa4,0x6c,0x85,0x6c,
0xa5,0x6d,0x86,0x6d,0xaa,0x98,0xa0,0x00,0x84,0x62,0x84,0x63,0x84,0x64,0x84,0x65,
0x84,0x6a,0x84,0x6b,0xa8,0xf0,0x46,0x85,0x28,0x86,0x29,0xa5,0x28,0x05,0x29,0xf0,
0x9e,0x46,0x28,0x66,0x29,0x90,0x19,0x18,0xa5,0x65,0x65,0x6d,0x85,0x65,0xa5,0x64,
0x65,0x6c,0x85,0x64,0xa5,0x63,0x65,0x6b,0x85,0x63,0xa5,0x62,0x65,0x6a,0x85,0x62,
0x06,0x6d,0x26,0x6c,0x26,0x6b,0x26,0x6a,0x90,0xd1,0xa5,0x64,0x49,0xff,0x85,0x64,
0xa5,0x65,0x49,0xff,0x85,0x65,0xe6,0x65,0xd0,0x02,0xe6,0x64,0x60,0x8a,0xf0,0xbf,
0x4a,0xaa,0x90,0x13,0x18,0xa5,0x65,0x65,0x6d,0x85,0x65,0xa5,0x64,0x65,0x6c,0x85,
0x64,0xa5,0x63,0x65,0x6b,0x85,0x63,0x06,0x6d,0x26,0x6c,0x26,0x6b,0x90,0xde,0xa9,
0x19,0x85,0x16,0x20,0xe0,0xa9,0x4c,0xac,0x0e,0xa5,0x39,0xa6,0x3a,0x85,0x7a,0x86,
0x7b,0x85,0x3d,0x86,0x3e,0x4c,0xe1,0xa7,0x85,0x3c,0x68,0x30,0x1e,0xd0,0x41,0x68,
0x85,0x6e,0x68,0x85,0x69,0x68,0x85,0x6a,0x68,0x85,0x6b,0x68,0x85,0x6c,0x68,0x85,
0x6d,0xe0,0x0c,0xb0,0x03,0x4c,0x71,0x0b,0x4c,0x2a,0x0c,0x68,0x85,0x6c,0x68,0x85,
0x6d,0xe0,0x0c,0xb0,0x15,0xe0,0x0a,0xb0,0x0e,0xa4,0x0e,0x10,0x10,0xe0,0x07,0xb0,
0x03,0x4c,0x99,0x0b,0x4c,0xfe,0x0c,0x4c,0x31,0x0b,0x4c,0x2d,0x0c,0x4c,0xc2,0x0b,
0x68,0x85,0x6f,0x68,0x85,0x70,0xe0,0x07,0xb0,0x03,0x4c,0x50,0x0a,0x4c,0xc7,0x09,
0xaa,0xc9,0x0e,0x90,0xa3,0xbd,0x7a,0x08,0x85,0x55,0xbd,0x17,0x08,0x85,0x56,0x6c,
0x55,0x00,0x68,0x68,0x68,0x68,0xa5,0x7a,0xa6,0x7b,0x85,0x39,0x86,0x3a,0x24,0x11,
0x50,0x1f,0xa5,0x91,0xc9,0x7f,0xd0,0x19,0x20,0xb7,0xab,0x38,0xb0,0x04,0x20,0x44,
0xa6,0x18,0x20,0x41,0xa8,0x20,0xb7,0xab,0x68,0x68,0x20,0x68,0xa8,0x24,0x11,0x70,
0xe1,0xa0,0x00,0x84,0x3b,0xe6,0x39,0xd0,0x17,0xe6,0x3a,0xd0,0x13,0xa0,0x00,0x18,
0x65,0x39,0x85,0x39,0x90,0x0a,0xe6,0x3a,0xd0,0x06,0xa0,0x00,0xe6,0x39,0xf0,0xf6,
0xb1,0x39,0x10,0x9c,0xc9,0xc0,0x90,0x77,0xc9,0xe0,0xb0,0x5b,0xaa,0xbc,0x2b,0x08,
0xb1,0x2d,0x10,0x0b,0xc8,0xa5,0x0e,0x30,0x30,0x20,0x42,0x14,0x4c,0x18,0x0f,0xc8,
0xb1,0x2d,0x30,0x36,0xa5,0x0e,0x10,0x07,0x84,0x22,0x20,0xff,0x13,0xa4,0x22,0xc8,
0x24,0x70,0x10,0x03,0x20,0x1b,0xbc,0xa5,0x61,0x91,0x2d,0xc8,0xa5,0x66,0x09,0x7f,
0x25,0x62,0x91,0x2d,0xc8,0xa5,0x63,0x91,0x2d,0xc8,0xa5,0x64,0x91,0x2d,0xc8,0xa5,
0x65,0x91,0x2d,0xa0,0x00,0x84,0x3b,0x4c,0xcb,0x0e,0x98,0x38,0x65,0x2d,0x85,0x49,
0xa5,0x2e,0x69,0x00,0x4c,0x61,0x13,0xc9,0xe6,0xb0,0x14,0x85,0x3b,0xe6,0x39,0xf0,
0x0a,0xc9,0xe4,0x90,0x03,0x4c,0x9f,0x11,0x4c,0x65,0x10,0xe6,0x3a,0xd0,0xf2,0xa6,
0x3b,0x85,0x3b,0xf0,0x7e,0xa4,0x0e,0xd0,0x70,0xa5,0x61,0xd0,0x04,0x85,0x64,0xf0,
0x44,0x24,0x70,0x10,0x03,0x20,0x1b,0xbc,0xa5,0x64,0x05,0x65,0xd0,0x45,0xa5,0x61,
0xc9,0x81,0x90,0x3f,0xe9,0x90,0x10,0x3b,0xc9,0xf9,0xb0,0x16,0x69,0x07,0xaa,0xa5,
0x63,0xd0,0x30,0xa5,0x62,0xe8,0xf0,0x06,0x4a,0xb0,0x28,0xe8,0xd0,0xfa,0x86,0x64,
0xf0,0x13,0xaa,0xa5,0x63,0x85,0x28,0xa5,0x62,0x4a,0x66,0x28,0xb0,0x15,0xe8,0xd0,
0xf8,0x85,0x64,0xa5,0x28,0x85,0x65,0xa0,0x80,0x24,0x66,0x10,0x1e,0x20,0xc9,0x0d,
0x4c,0xc8,0x0f,0xa5,0x65,0x48,0xa5,0x64,0x48,0xa5,0x63,0x48,0xa5,0x62,0x48,0xa5,
0x61,0x48,0xa5,0x66,0x48,0x98,0x48,0xf0,0x08,0xa5,0x65,0x48,0xa5,0x64,0x48,0x98,
0x48,0xa5,0x3b,0xc9,0xa0,0xb0,0x48,0xaa,0xbc,0x6b,0x08,0xb1,0x2d,0x10,0x14,0x85,
0x0e,0xc8,0xc8,0xb1,0x2d,0x85,0x64,0xc8,0xb1,0x2d,0x85,0x65,0xa0,0x00,0x84,0x0d,
0x4c,0xcb,0x0e,0xc8,0xb1,0x2d,0x10,0x3c,0x85,0x0d,0x98,0x38,0x65,0x2d,0x85,0x49,
0x85,0x64,0xa5,0x2e,0x69,0x00,0x85,0x4a,0x85,0x65,0xa0,0x02,0xb1,0x49,0x85,0x63,
0x88,0x84,0x0e,0xb1,0x49,0x85,0x62,0x88,0xb1,0x49,0x85,0x61,0x4c,0xcb,0x0e,0xc9,
0xa6,0xb0,0x7d,0xe6,0x39,0xf0,0x09,0xa0,0x00,0xc9,0xa4,0x90,0x39,0x4c,0x9f,0x11,
0xe6,0x3a,0xd0,0xf3,0xc8,0xb1,0x2d,0x85,0x61,0xc8,0xb1,0x2d,0x85,0x66,0x09,0x80,
0x85,0x62,0xc8,0xb1,0x2d,0x85,0x63,0xc8,0xb1,0x2d,0x85,0x64,0xc8,0xb1,0x2d,0x85,
0x65,0xa0,0x00,0x84,0x0e,0x84,0x0d,0x84,0x70,0x4c,0xcb,0x0e,0xb1,0x39,0xe6,0x39,
0xd0,0x0a,0xe6,0x3a,0xd0,0x06,0x29,0x03,0xc9,0x03,0xf0,0xf0,0x85,0x48,0x85,0x60,
0xb1,0x39,0x85,0x47,0x0a,0x26,0x60,0x0a,0x26,0x60,0x0a,0x26,0x60,0x38,0xe5,0x47,
0xa8,0xa5,0x60,0xe5,0x48,0xaa,0x98,0x18,0x65,0x2d,0x85,0x5f,0x8a,0x65,0x2e,0x85,
0x60,0xa5,0x5f,0x69,0x02,0x85,0x49,0xa5,0x60,0x69,0x00,0x85,0x4a,0x4c,0x08,0x13,
0xc9,0xe7,0xb0,0x6f,0xc9,0xb0,0x90,0x0f,0x85,0x0e,0x29,0x0f,0x85,0x65,0xa0,0x00,
0x84,0x64,0x84,0x0d,0x4c,0xcb,0x0e,0xa2,0x00,0xc9,0xaa,0xb0,0x7d,0xa0,0x01,0x85,
0x0e,0xc9,0xa7,0x90,0x06,0xd0,0x13,0xb1,0x39,0xaa,0xc8,0xb1,0x39,0x85,0x65,0x86,
0x64,0xc8,0x98,0xa0,0x00,0x84,0x0d,0x4c,0xbe,0x0e,0xb1,0x39,0x85,0x61,0xc8,0xb1,
0x39,0x85,0x66,0x09,0x80,0x85,0x62,0xc8,0xb1,0x39,0x85,0x63,0xc8,0xb1,0x39,0x85,
0x64,0xc8,0xb1,0x39,0x85,0x65,0xa0,0x00,0x84,0x0d,0x84,0x0e,0xa9,0x06,0x4c,0xbe,
0x0e,0x85,0x0e,0x29,0x1f,0x10,0xa5,0xa0,0x01,0xb1,0x39,0xe6,0x39,0xd0,0x0e,0xe6,
0x3a,0xd0,0x0a,0xf0,0xf2,0xc9,0xf0,0xb0,0xe8,0x29,0x07,0xa0,0x01,0x85,0x61,0x84,
0x0e,0xa5,0x39,0xaa,0x18,0x65,0x61,0x85,0x39,0xa4,0x3a,0x90,0x02,0xe6,0x3a,0xe8,
0xd0,0x01,0xc8,0x86,0x62,0x84,0x63,0x4c,0x0c,0x18,0x86,0x0d,0xf0,0x2d,0xc9,0xac,
0x90,0x1b,0xd0,0x08,0x86,0x0e,0x20,0x7b,0xaf,0x4c,0xc9,0x0e,0xc9,0xaf,0x90,0x0a,
0x20,0x48,0xaf,0xa0,0x01,0x84,0x0e,0x4c,0xc9,0x0e,0x4c,0x08,0xaf,0x85,0x0e,0xa5,
0x90,0x10,0x01,0xca,0x86,0x64,0x85,0x65,0x4c,0xc9,0x0e,0x86,0x0e,0xa9,0xa8,0xa0,
0xae,0x20,0xa2,0xbb,0x4c,0xc9,0x0e,0xb1,0x39,0x18,0x65,0x2f,0x85,0x69,0xc8,0xb1,
0x39,0x65,0x30,0x85,0x6a,0xe6,0x39,0xd0,0x02,0xe6,0x3a,0xa0,0x00,0xb1,0x69,0xaa,
0x18,0x65,0x2f,0x85,0x5f,0xc8,0x8a,0x11,0x69,0xf0,0x66,0xb1,0x69,0x4c,0xb4,0x11,
0xd0,0xd5,0xb1,0x39,0xa8,0x18,0xb1,0x2f,0xaa,0x65,0x2f,0x85,0x5f,0xc8,0x8a,0x11,
0x2f,0xf0,0x4e,0xb1,0x2f,0x65,0x30,0x85,0x60,0xa0,0x01,0xb1,0x5f,0x85,0x46,0x88,
0xb1,0x5f,0x85,0x45,0xa0,0x04,0xb1,0x5f,0x85,0x0b,0x0a,0x69,0x05,0x65,0x5f,0x85,
0x58,0xa9,0x00,0x65,0x60,0x85,0x59,0xc8,0x68,0x30,0x17,0x68,0x85,0x6e,0x68,0x85,
0x69,0x68,0x85,0x6a,0x68,0x85,0x6b,0x68,0x68,0x20,0x5c,0x0c,0xa5,0x6d,0x48,0xa5,
0x6c,0x48,0x68,0x85,0x72,0xd1,0x5f,0x90,0x0b,0xd0,0x06,0xc8,0x68,0xd1,0x5f,0x90,
0x05,0x4c,0x45,0xb2,0xc8,0x68,0x85,0x71,0xc6,0x0b,0xf0,0x4e,0xc8,0x68,0x30,0x17,
0x68,0x85,0x6e,0x68,0x85,0x69,0x68,0x85,0x6a,0x68,0x85,0x6b,0x68,0x68,0x20,0x5c,
0x0c,0xa5,0x6d,0x48,0xa5,0x6c,0x48,0x68,0x85,0x6c,0xd1,0x5f,0x90,0x0b,0xd0,0x06,
0xc8,0x68,0xd1,0x5f,0x90,0x05,0x4c,0x45,0xb2,0xc8,0x68,0x85,0x6d,0xaa,0xa5,0x72,
0x05,0x71,0x18,0xf0,0x0a,0x20,0x4c,0xb3,0x8a,0x65,0x6d,0xaa,0x98,0xa4,0x22,0x65,
0x6c,0x86,0x71,0x85,0x72,0xc6,0x0b,0xd0,0xb3,0x8a,0xa6,0x72,0x0a,0x26,0x72,0x24,
0x45,0x30,0x46,0x24,0x46,0x30,0x70,0x0a,0x26,0x72,0x65,0x71,0x90,0x02,0xe8,0x18,
0x65,0x58,0x85,0x49,0x8a,0x65,0x72,0x65,0x59,0x85,0x4a,0x24,0x3b,0x50,0x03,0x4c,
0x29,0x13,0xa0,0x04,0xb1,0x49,0x85,0x65,0x88,0xb1,0x49,0x85,0x64,0x88,0xb1,0x49,
0x85,0x63,0x88,0xb1,0x49,0x85,0x66,0x09,0x80,0x85,0x62,0x88,0xb1,0x49,0x85,0x61,
0x84,0x0d,0x84,0x0e,0x84,0x70,0x4c,0xcb,0x0e,0x65,0x58,0x85,0x49,0xa5,0x72,0x65,
0x59,0x85,0x4a,0xa0,0x00,0x24,0x3b,0x70,0x13,0xc8,0xb1,0x49,0x85,0x65,0x88,0xb1,
0x49,0x85,0x64,0xa9,0x80,0x85,0x0e,0x84,0x0d,0x4c,0xcb,0x0e,0xa5,0x0e,0x30,0x7d,
0x20,0x42,0x14,0xa0,0x00,0xf0,0x76,0x65,0x71,0x90,0x02,0xe8,0x18,0x65,0x58,0x85,
0x49,0x24,0x3b,0x70,0x78,0x85,0x64,0x8a,0x65,0x72,0x65,0x59,0x85,0x4a,0x85,0x65,
0xa9,0xff,0x85,0x0d,0xa0,0x02,0xb1,0x64,0x85,0x63,0x88,0x84,0x0e,0xb1,0x64,0x85,
0x62,0x88,0xb1,0x64,0x85,0x61,0x4c,0xcb,0x0e,0xa0,0x00,0x24,0x3b,0xb1,0x5f,0x30,
0xa6,0xc8,0xb1,0x5f,0x10,0x0f,0x70,0x4c,0x85,0x0d,0xa6,0x49,0xa5,0x4a,0x86,0x64,
0x85,0x65,0x4c,0xf3,0x12,0x70,0x03,0x4c,0x81,0x12,0xa5,0x0e,0x10,0x03,0x20,0xff,
0x13,0xa5,0x70,0x10,0x03,0x20,0x1b,0xbc,0xa0,0x00,0xa5,0x61,0x91,0x49,0xc8,0xa5,
0x66,0x09,0x7f,0x25,0x62,0x91,0x49,0xc8,0xa5,0x63,0x91,0x49,0xc8,0xa5,0x64,0x91,
0x49,0xc8,0xa5,0x65,0x91,0x49,0xa0,0x00,0x84,0x3b,0x4c,0xcb,0x0e,0x8a,0x65,0x72,
0x65,0x59,0x85,0x4a,0xa9,0x19,0x85,0x16,0xa5,0x61,0xf0,0x48,0xa4,0x63,0xc4,0x34,
0xd0,0x04,0xa4,0x62,0xc4,0x33,0x90,0x3c,0xa5,0x65,0xf0,0x38,0xa4,0x34,0xa5,0x33,
0x38,0xe5,0x61,0xb0,0x01,0x88,0xc4,0x32,0xd0,0x02,0xc5,0x31,0xb0,0x03,0x20,0x7a,
0x1f,0x85,0x62,0x85,0x33,0x84,0x63,0x84,0x34,0xa0,0x02,0xb1,0x64,0x85,0x23,0x88,
0xb1,0x64,0x85,0x22,0xa4,0x61,0x88,0xf0,0x07,0xb1,0x22,0x91,0x33,0x88,0xd0,0xf9,
0xb1,0x22,0x91,0x33,0xa0,0x02,0xa5,0x63,0x91,0x49,0x88,0xa5,0x62,0x91,0x49,0x88,
0xa5,0x61,0x91,0x49,0x84,0x3b,0x4c,0xcb,0x0e,0x68,0x18,0x69,0x01,0x85,0x55,0x68,
0x69,0x00,0x85,0x56,0x68,0x85,0x0e,0xd0,0x0e,0x85,0x70,0x68,0x85,0x66,0x68,0x85,
0x61,0x68,0x85,0x62,0x68,0x85,0x63,0x68,0x85,0x64,0x68,0x85,0x65,0x6c,0x55,0x00,
0xa2,0x00,0xa5,0x66,0x10,0x01,0xca,0x86,0x64,0x86,0x65,0xa9,0x80,0x85,0x0e,0x60,
0xa0,0x00,0x84,0x0e,0x84,0x70,0x84,0x61,0x84,0x62,0x84,0x63,0xa2,0x90,0xa5,0x64,
0x85,0x66,0x10,0x05,0x20,0xc9,0x0d,0xa5,0x64,0xd0,0x08,0xa2,0x88,0xa5,0x65,0xf0,
0x16,0x84,0x65,0x30,0x06,0xca,0x06,0x65,0x2a,0x10,0xfa,0x85,0x62,0xa5,0x65,0x85,
0x63,0x86,0x61,0x84,0x64,0x84,0x65,0x60,0xa5,0x0e,0x29,0x80,0xc5,0x0c,0xf0,0xf7,
0xaa,0x30,0xbd,0x24,0x70,0x10,0x03,0x20,0x1b,0xbc,0xa5,0x61,0xc9,0x81,0x90,0xa0,
0xe9,0x90,0x10,0x45,0xa6,0x66,0x30,0x28,0xc9,0xf9,0xb0,0x10,0x69,0x07,0xaa,0xa5,
0x62,0xe8,0xf0,0x04,0x4a,0xe8,0xd0,0xfc,0x86,0x64,0xf0,0x0d,0xaa,0xa5,0x62,0x4a,
0x66,0x63,0xe8,0xd0,0xfa,0x85,0x64,0xa5,0x63,0x85,0x65,0xa9,0x80,0x85,0x0e,0x60,
0xaa,0x20,0x4d,0xb9,0xa5,0x62,0x38,0x6a,0x66,0x63,0xe8,0xd0,0xf9,0xf0,0xe6,0xa5,
0x0e,0x10,0x09,0xa6,0x65,0xa5,0x64,0x10,0x2b,0x4c,0x48,0xb2,0xa5,0x66,0x30,0xf9,
0x24,0x70,0x10,0x03,0x20,0x1b,0xbc,0xa5,0x61,0xc9,0x81,0xb0,0x05,0xa9,0x00,0xaa,
0xf0,0x12,0xe9,0x91,0x10,0xe3,0xaa,0xa5,0x62,0xe8,0xf0,0x06,0x4a,0x66,0x63,0xe8,
0xd0,0xfa,0xa6,0x63,0x85,0x15,0x86,0x14,0x60,0xa5,0x0e,0x10,0x07,0xa6,0x65,0xa5,
0x64,0xd0,0xc6,0x60,0x24,0x70,0x10,0x03,0x20,0x1b,0xbc,0xa5,0x66,0x30,0xba,0xa5,
0x61,0xc9,0x81,0x90,0x16,0xe9,0x89,0x10,0xb0,0xaa,0xa5,0x62,0xe8,0xf0,0x04,0x4a,
0xe8,0xd0,0xfc,0xaa,0x86,0x65,0xa9,0x00,0x85,0x64,0x60,0xa2,0x00,0xf0,0xf5,0xa6,
0x61,0xf0,0x96,0xa6,0x65,0xd0,0x19,0xa5,0x64,0x85,0x16,0xa6,0x63,0xe4,0x34,0xd0,
0x0f,0xa5,0x62,0xc5,0x33,0xd0,0x09,0x18,0x65,0x61,0x85,0x33,0x90,0x02,0xe6,0x34,
0xb1,0x62,0x4c,0xbb,0x15,0xa5,0x0e,0xf0,0x03,0x20,0xff,0x13,0xb1,0x39,0x0a,0x69,
0x28,0x20,0xd5,0xaf,0x4c,0xc9,0x0e,0xa5,0x0e,0x30,0x05,0x85,0x66,0x4c,0xcb,0x0e,
0xa5,0x64,0x10,0x03,0x20,0xc9,0x0d,0x4c,0xcb,0x0e,0xa5,0x0e,0x30,0xf9,0xa5,0x61,
0xc9,0x90,0x90,0x0d,0x24,0x70,0x10,0x03,0x20,0x1b,0xbc,0x20,0xcc,0xbc,0x4c,0xc9,
0x0e,0x20,0x42,0x14,0x4c,0xcb,0x0e,0xa5,0x0e,0x10,0x15,0xa0,0xff,0xa5,0x64,0x30,
0x06,0xc8,0x05,0x65,0xf0,0x01,0xc8,0x98,0xa0,0x00,0xaa,0x10,0x41,0x88,0x30,0x3e,
0x20,0x2b,0xbc,0x4c,0x77,0x15,0x20,0x8e,0x14,0xb1,0x14,0x85,0x65,0x84,0x64,0xa9,
0x80,0x85,0x0e,0x4c,0xcb,0x0e,0xa5,0xd3,0x4c,0x8a,0x15,0xa6,0x65,0xd0,0x19,0xa5,
0x64,0x85,0x16,0xa6,0x63,0xe4,0x34,0xd0,0x0f,0xa5,0x62,0xc5,0x33,0xd0,0x09,0x18,
0x65,0x61,0x85,0x33,0x90,0x02,0xe6,0x34,0xa5,0x61,0xa0,0x00,0x84,0x0d,0x85,0x65,
0x84,0x64,0xa9,0x80,0x85,0x0e,0x4c,0xc9,0x0e,0xa4,0x62,0xa6,0x63,0x86,0x23,0x84,
0x22,0xa5,0x65,0xd0,0x19,0xa5,0x64,0x85,0x16,0xa5,0x61,0xf0,0xdd,0xe4,0x34,0xd0,
0x0d,0xc4,0x33,0xd0,0x09,0x18,0x65,0x62,0x85,0x33,0x90,0x02,0xe6,0x34,0xa5,0x61,
0xf0,0xc8,0x20,0xb0,0xb7,0xa0,0x00,0x84,0x0d,0x84,0x0e,0x4c,0xcb,0x0e,0xa5,0x0e,
0x30,0x5c,0xa5,0x61,0xd0,0x04,0x85,0x64,0xf0,0x4b,0x24,0x70,0x10,0x03,0x20,0x1b,
0xbc,0xa5,0x64,0x05,0x65,0xd0,0x39,0xa5,0x61,0xc9,0x81,0x90,0x33,0xe9,0x90,0x10,
0x2f,0xc9,0xf9,0xb0,0x16,0x69,0x07,0xaa,0xa5,0x63,0xd0,0x24,0xa5,0x62,0xe8,0xf0,
0x06,0x4a,0xb0,0x1c,0xe8,0xd0,0xfa,0x86,0x64,0xf0,0x1a,0xaa,0xa5,0x63,0x85,0x28,
0xa5,0x62,0x4a,0x66,0x28,0xb0,0x09,0xe8,0xd0,0xf8,0x85,0x64,0xa5,0x28,0x90,0x05,
0x20,0xdd,0xbd,0xd0,0x0c,0x85,0x65,0x24,0x66,0x10,0x03,0x20,0xc9,0x0d,0x20,0x1d,
0x09,0x84,0x6d,0x85,0x51,0x85,0x6e,0x85,0x6c,0xa9,0x6b,0x85,0x50,0x84,0x0e,0x88,
0xc8,0xb9,0x00,0x01,0xd0,0xfa,0x84,0x61,0x4c,0xcb,0x17,0xa5,0x0e,0x10,0x07,0xa5,
0x64,0xf0,0x06,0x4c,0x48,0xb2,0x20,0xd3,0x14,0xa9,0x01,0x85,0x61,0x85,0x0e,0xa5,
0x33,0xa4,0x34,0x38,0xe9,0x01,0xb0,0x01,0x88,0xc4,0x32,0xd0,0x02,0xc5,0x31,0xb0,
0x03,0x20,0x7a,0x1f,0x85,0x33,0x84,0x34,0x85,0x62,0x84,0x63,0xa0,0x00,0xa5,0x65,
0x91,0x62,0x4c,0x0c,0x18,0xa5,0x0e,0x10,0x08,0xa6,0x65,0xa5,0x64,0xf0,0x05,0xd0,
0xc2,0x20,0xd3,0x14,0x86,0x13,0x20,0xc6,0xff,0x84,0x3b,0x4c,0xcb,0x0e,0x84,0x13,
0x20,0xe4,0xff,0x48,0x20,0xcc,0xff,0xa4,0x0d,0x30,0x1a,0x68,0xc9,0x30,0x90,0x04,
0xc9,0x3a,0x90,0x01,0x98,0x29,0x0f,0x85,0x65,0x84,0x64,0x24,0x0e,0x30,0x03,0x4c,
0x2d,0x13,0x4c,0x4c,0x13,0x68,0xf0,0x16,0xa4,0x61,0x88,0xd0,0x19,0xa6,0x63,0xe4,
0x34,0xd0,0x04,0xa6,0x62,0xe4,0x33,0x90,0x0d,0x91,0x62,0x4c,0xac,0x0e,0xa6,0x61,
0xf0,0xf9,0x85,0x61,0xd0,0x29,0x85,0x69,0xa9,0x01,0x85,0x61,0xa5,0x33,0xa4,0x34,
0x38,0xe9,0x01,0xb0,0x01,0x88,0xc4,0x32,0xd0,0x02,0xc5,0x31,0xb0,0x03,0x20,0x7a,
0x1f,0x85,0x33,0x84,0x34,0x85,0x62,0x84,0x63,0xa5,0x69,0xa0,0x00,0x91,0x62,0x4c,
0xb3,0x13,0xa5,0x0e,0x30,0x03,0x20,0xd3,0x14,0xa5,0x64,0xd0,0x32,0x68,0x10,0x09,
0x68,0xd0,0x2c,0x68,0xaa,0xd0,0x2e,0xf0,0x26,0x68,0x30,0x23,0x68,0x38,0xe9,0x89,
0x10,0x1d,0xa8,0x68,0xaa,0x68,0x68,0x68,0x8a,0xc8,0xf0,0x19,0x4a,0xc8,0xd0,0xfc,
0xaa,0xd0,0x12,0xf0,0x0a,0xa5,0x0e,0x10,0x09,0xa6,0x65,0xa5,0x64,0xf0,0x06,0x4c,
0x48,0xb2,0x20,0xd3,0x14,0x68,0x85,0x0e,0x68,0x85,0x50,0x68,0x85,0x51,0xd0,0x04,
0xa5,0x50,0x85,0x16,0xb1,0x50,0x85,0x69,0xb1,0x39,0xc9,0x35,0x90,0x23,0xf0,0x16,
0xca,0x8a,0x85,0x6e,0xa2,0x00,0x18,0xe5,0x69,0xb0,0x1f,0x49,0xff,0xaa,0xe4,0x65,
0x90,0x18,0xa6,0x65,0xb0,0x14,0x8a,0x18,0xe5,0x69,0x49,0xff,0x90,0x0a,0x98,0xb0,
0x05,0x98,0xe4,0x69,0x90,0x02,0xa6,0x69,0x85,0x6e,0x86,0x61,0xa5,0x61,0xf0,0x3d,
0xa5,0x33,0xa4,0x34,0x38,0xe5,0x61,0xb0,0x01,0x88,0xc4,0x32,0xd0,0x02,0xc5,0x31,
0xb0,0x03,0x20,0x7a,0x1f,0x85,0x62,0x85,0x33,0x84,0x63,0x84,0x34,0xa0,0x01,0xb1,
0x50,0x18,0x65,0x6e,0x85,0x22,0xc8,0xb1,0x50,0x69,0x00,0x85,0x23,0xa4,0x61,0x88,
0xf0,0x07,0xb1,0x22,0x91,0x62,0x88,0xd0,0xf9,0xb1,0x22,0x91,0x62,0xa6,0x16,0xe0,
0x1f,0xb0,0x1d,0xa5,0x61,0x95,0x00,0xa5,0x62,0x95,0x01,0xa5,0x63,0x95,0x02,0xa0,
0xff,0x84,0x0d,0xc8,0x86,0x64,0x84,0x65,0x8a,0x69,0x03,0x85,0x16,0x4c,0xcb,0x0e,
0x4c,0xd0,0xb4,0x86,0x3c,0x20,0x8e,0x14,0x20,0x0c,0x1f,0xa5,0x3c,0xc9,0x4c,0x90,
0x10,0x86,0x49,0xd0,0x04,0xa2,0x00,0xf0,0x03,0x20,0x0c,0x1f,0x20,0x3c,0xb8,0xd0,
0x03,0x8a,0x91,0x14,0x4c,0xac,0x0e,0xa5,0x39,0x69,0x00,0x85,0x7a,0xa5,0x3a,0x69,
0x00,0x85,0x7b,0x20,0x8e,0x14,0x20,0x30,0xe1,0x4c,0x85,0x0e,0x86,0x3c,0xb1,0x41,
0x10,0x05,0xa2,0x2a,0x4c,0x37,0xa4,0xaa,0xa5,0x41,0x69,0x00,0x85,0x62,0x85,0x22,
0xa5,0x42,0x69,0x00,0x85,0x63,0x85,0x23,0x38,0x8a,0x65,0x41,0x85,0x41,0x90,0x02,
0xe6,0x42,0x86,0x61,0x46,0x3c,0xb0,0x03,0x4c,0xb3,0x13,0x8a,0x20,0xb0,0xb7,0x24,
0x0e,0x30,0x03,0x4c,0x30,0x13,0x4c,0xcf,0x12,0xa6,0x65,0xd0,0x1d,0xa9,0x19,0x85,
0x16,0xa6,0x61,0xf0,0x23,0xa5,0x63,0xc5,0x34,0xd0,0x0f,0xa5,0x62,0xc5,0x33,0xd0,
0x09,0x18,0x65,0x61,0x85,0x33,0x90,0x02,0xe6,0x34,0xc4,0x61,0xf0,0x0a,0xb1,0x62,
0x20,0xd2,0xff,0xc8,0xc4,0x61,0xd0,0xf6,0x4c,0x56,0x19,0xa5,0x0e,0x30,0x5d,0xd0,
0xc8,0xa5,0x61,0xd0,0x04,0x85,0x64,0xf0,0x4a,0x24,0x70,0x10,0x03,0x20,0x1b,0xbc,
0xa5,0x64,0x05,0x65,0xd0,0x38,0xa5,0x61,0x10,0x34,0x38,0xe9,0x90,0x10,0x2f,0xc9,
0xf9,0xb0,0x16,0x69,0x07,0xaa,0xa5,0x63,0xd0,0x24,0xa5,0x62,0xe8,0xf0,0x06,0x4a,
0xb0,0x1c,0xe8,0xd0,0xfa,0x86,0x64,0xf0,0x1a,0xaa,0xa5,0x63,0x85,0x28,0xa5,0x62,
0x4a,0x66,0x28,0xb0,0x09,0xe8,0xd0,0xf8,0x85,0x64,0xa5,0x28,0x90,0x05,0x20,0xdd,
0xbd,0xd0,0x0c,0x85,0x65,0x24,0x66,0x10,0x03,0x20,0xc9,0x0d,0x20,0x1d,0x09,0xa2,
0x00,0xbd,0x00,0x01,0xf0,0x06,0x20,0xd2,0xff,0xe8,0xd0,0xf5,0xa9,0x1d,0xa6,0x13,
0xf0,0x02,0xa9,0x20,0x20,0xd2,0xff,0xa0,0x00,0xb1,0x39,0xc9,0x3d,0x90,0x3a,0xd0,
0x3d,0xa5,0xd3,0x38,0xe9,0x0a,0xb0,0xfc,0x49,0xff,0x69,0x01,0x10,0x17,0x86,0x3c,
0xa5,0x0e,0x30,0x03,0x20,0xd3,0x14,0xa5,0x64,0xd0,0x4a,0xa5,0x65,0x46,0x3c,0x90,
0x04,0xe5,0xd3,0x90,0x14,0xaa,0xf0,0x11,0xa0,0x1d,0xa5,0x13,0xf0,0x02,0xa0,0x20,
0x98,0x20,0xd2,0xff,0xca,0xd0,0xf9,0xa0,0x00,0x84,0x3b,0x4c,0xcb,0x0e,0xaa,0xa9,
0x0d,0x20,0xd2,0xff,0xa5,0x13,0x10,0x05,0xa9,0x0a,0x20,0xd2,0xff,0xe0,0x43,0x90,
0x07,0x20,0xcc,0xff,0xa9,0x00,0x85,0x13,0x4c,0xac,0x0e,0xa5,0x0e,0xf0,0x09,0xa6,
0x65,0xa5,0x64,0xf0,0x06,0x4c,0x48,0xb2,0x20,0xd3,0x14,0x86,0x13,0x20,0xc9,0xff,
0xb1,0x39,0xc9,0x44,0xb0,0xc8,0x84,0x3b,0x4c,0xcb,0x0e,0xa5,0x0e,0x30,0x03,0x20,
0xd3,0x14,0xa5,0x64,0xd0,0xdf,0xa5,0x65,0x20,0xc3,0xff,0xb0,0x03,0x4c,0xac,0x0e,
0xc9,0xf0,0xd0,0x07,0x84,0x38,0x86,0x37,0x4c,0x83,0x0c,0x4c,0x04,0xe1,0xa9,0x40,
0x2c,0xa9,0x80,0x05,0x11,0xd0,0x07,0xa9,0xbf,0x2c,0xa9,0x7f,0x25,0x11,0x85,0x11,
0x4c,0xac,0x0e,0xa5,0x39,0x85,0x3d,0xa5,0x3a,0x85,0x3e,0x4c,0xac,0x0e,0x86,0x3c,
0xa5,0x13,0xf0,0x27,0xa2,0x00,0x20,0xcf,0xff,0xc9,0x0d,0xf0,0x0b,0x9d,0x00,0x02,
0xe8,0xe0,0x59,0xd0,0xf1,0x4c,0x71,0xa5,0xa9,0x00,0x9d,0x00,0x02,0xa8,0xa5,0x90,
0x29,0x03,0xd0,0x11,0xad,0x00,0x02,0xd0,0x2e,0xf0,0xd9,0x20,0xf9,0xab,0xa0,0x00,
0xad,0x00,0x02,0xd0,0x22,0x84,0x43,0x20,0xb7,0xab,0x4c,0xac,0x0e,0x86,0x3c,0xa4,
0x43,0xb9,0x00,0x02,0xf0,0x04,0xc9,0x3a,0xd0,0x0c,0xa5,0x13,0xd0,0xb6,0x98,0xf0,
0xe9,0x20,0x45,0xab,0xd0,0xd5,0xc8,0xb9,0x00,0x02,0xc9,0x20,0xf0,0xf8,0x84,0x7a,
0xa2,0x02,0x86,0x7b,0x24,0x0d,0x30,0x5f,0x20,0x79,0x00,0x20,0xf3,0xbc,0xa4,0x7a,
0xb9,0x00,0x02,0xf0,0x16,0xc9,0x3a,0xf0,0x12,0xc9,0x2c,0xf0,0x0e,0x20,0x62,0xab,
0xa5,0x3d,0xa4,0x3e,0x85,0x39,0x84,0x3a,0x4c,0xac,0x0e,0x84,0x43,0xa6,0x3c,0xe0,
0x55,0xb0,0x1b,0xa6,0x13,0xf0,0x07,0x20,0xcc,0xff,0xa9,0x00,0x85,0x13,0xaa,0xf0,
0x0d,0xa0,0x00,0xb9,0xfc,0xac,0xf0,0x06,0x20,0xd2,0xff,0xc8,0xd0,0xf5,0x24,0x0d,
0x30,0x03,0x4c,0x9e,0x18,0xa4,0x61,0xf0,0x0b,0xa9,0x00,0x85,0x65,0xa9,0x69,0x85,
0x64,0x4c,0x7b,0x13,0x4c,0xb3,0x13,0x86,0x6b,0x84,0x6a,0xaa,0xf0,0x24,0xc9,0x22,
0xd0,0x18,0xe6,0x6a,0xe6,0x7a,0xc8,0xb9,0x00,0x02,0xf0,0x16,0xc9,0x22,0xd0,0xf6,
0x98,0xc8,0xd0,0x0f,0xc8,0xb9,0x00,0x02,0xf0,0x08,0xc9,0x3a,0xf0,0x04,0xc9,0x2c,
0xd0,0xf2,0x98,0x38,0xe5,0x6a,0x85,0x61,0x4c,0x8f,0x1a,0x86,0x3c,0x8a,0x69,0x92,
0x85,0x3d,0xa2,0x05,0x86,0x55,0xa0,0xef,0xad,0x01,0x02,0x91,0x3c,0xa9,0x40,0xa0,
0xfb,0x91,0x3c,0xae,0x02,0x02,0xa9,0x01,0x20,0x5a,0x1b,0x0a,0xd0,0x0f,0x90,0x0d,
0x2a,0x20,0x5a,0x1b,0x30,0x07,0xca,0xf0,0x0b,0xc9,0x00,0xf0,0xe9,0xc6,0x55,0xd0,
0xd5,0x4c,0x9d,0x0e,0xc5,0x65,0xd0,0xf5,0x4c,0xc9,0x0e,0x91,0x3c,0x4a,0x91,0x3c,
0xb1,0x3c,0x60,0xa5,0x0e,0x29,0x80,0x85,0x0c,0x20,0xc8,0x13,0x20,0x37,0x14,0x20,
0x0f,0xbc,0x4c,0x91,0x1b,0xa9,0x01,0xa6,0x0e,0x30,0x0d,0xa9,0x81,0x85,0x69,0xa9,
0x80,0x85,0x6a,0x0a,0x85,0x6e,0x85,0x6b,0x85,0x6d,0x4a,0x85,0x6c,0x8a,0x29,0x80,
0x85,0x0c,0x20,0xc8,0x13,0x20,0x37,0x14,0xba,0xbd,0x01,0x01,0x0a,0xd0,0x1e,0xa0,
0x09,0xb0,0x02,0xa0,0x10,0x84,0x0b,0xa5,0x4a,0xdd,0x03,0x01,0xd0,0x05,0xa5,0x49,
0xdd,0x02,0x01,0x08,0x8a,0x18,0x65,0x0b,0xaa,0x28,0xd0,0xdd,0x9a,0xba,0xe0,0x40,
0xb0,0x03,0x4c,0x35,0xa4,0xa5,0x0c,0xf0,0x0f,0xa5,0x65,0x48,0xa5,0x64,0x48,0xa5,
0x6d,0x48,0xa5,0x6c,0x48,0x4c,0xf3,0x1b,0xa5,0x66,0x09,0x7f,0x25,0x62,0x85,0x62,
0xa9,0xea,0xa0,0x1b,0x85,0x22,0x84,0x23,0x4c,0x43,0xae,0x20,0xfc,0xbb,0x20,0x2b,
0xbc,0x20,0x38,0xae,0xa5,0x3a,0x48,0xa5,0x39,0x48,0xa5,0x4a,0x48,0xa5,0x49,0x48,
0xa5,0x0c,0x48,0x4c,0xac,0x0e,0x69,0x08,0xaa,0xd0,0x01,0xba,0xa5,0x4a,0xdd,0x03,
0x01,0xd0,0x07,0xa5,0x49,0xdd,0x02,0x01,0xf0,0x1c,0xbd,0x01,0x01,0x0a,0xd0,0x08,
0x8a,0xb0,0xe3,0x69,0x10,0xaa,0xd0,0xe4,0x4c,0x30,0xad,0xba,0xbd,0x03,0x01,0x85,
0x4a,0xbd,0x02,0x01,0x85,0x49,0xbd,0x01,0x01,0x0a,0xd0,0xec,0x9a,0xc8,0xb0,0x26,
0x8a,0x69,0x06,0x48,0x69,0x06,0x85,0x24,0x68,0x20,0xa2,0xbb,0xba,0xbd,0x0b,0x01,
0x85,0x66,0x85,0x0c,0xa5,0x49,0xa4,0x4a,0x20,0x67,0xb8,0x20,0xd0,0xbb,0xa0,0x01,
0x20,0x5d,0xbc,0x4c,0xa8,0x1c,0xbd,0x07,0x01,0x18,0x71,0x49,0x91,0x49,0x85,0x65,
0x84,0x0c,0x88,0xbd,0x06,0x01,0x10,0x02,0x84,0x0c,0x71,0x49,0x91,0x49,0x85,0x64,
0xbd,0x09,0x01,0xa8,0xbd,0x08,0x01,0xc5,0x64,0xd0,0x04,0xc4,0x65,0xf0,0x20,0xa0,
0x00,0x45,0x64,0x30,0x27,0xb0,0x02,0xa0,0x01,0xc4,0x0c,0xd0,0x12,0x8a,0x69,0x08,
0xaa,0x9a,0xa0,0x00,0x84,0x3b,0x4c,0xcb,0x0e,0x38,0xba,0xe5,0x0c,0xf0,0x11,0xbd,
0x05,0x01,0x85,0x3a,0xbd,0x04,0x01,0x85,0x39,0x4c,0xac,0x0e,0xb0,0xd9,0x90,0xd9,
0x8a,0x18,0x69,0x10,0xaa,0x9a,0xa0,0x00,0x84,0x3b,0x4c,0xcb,0x0e,0x84,0x3b,0xa5,
0x0e,0x10,0x0b,0xa5,0x64,0x05,0x65,0xd0,0x44,0xa9,0x02,0x4c,0xbf,0x0e,0xa5,0x61,
0xd0,0x3b,0xf0,0xf5,0x84,0x3b,0xc8,0x86,0x3c,0xa5,0x0e,0xf0,0x07,0xa5,0x64,0xf0,
0x06,0x4c,0x48,0xb2,0x20,0xd3,0x14,0xb1,0x39,0xaa,0xa5,0x65,0xf0,0x05,0x0a,0xd1,
0x39,0x90,0x04,0x8a,0x4c,0xbc,0x0e,0xa8,0x46,0x3c,0xb0,0x12,0x88,0x8a,0xd0,0x02,
0xa9,0x02,0x65,0x39,0x48,0xa5,0x3a,0x69,0x00,0x48,0xa9,0x8d,0x48,0xc8,0xb1,0x39,
0xaa,0xc8,0xb1,0x39,0x85,0x39,0x86,0x3a,0xa0,0x00,0x4c,0xcf,0x0e,0x69,0x0f,0xaa,
0x9a,0x68,0xc9,0x8d,0xf0,0x1e,0x0a,0xd0,0x08,0xba,0x8a,0x90,0xf0,0x69,0x07,0xd0,
0xee,0x4c,0xe0,0xa8,0x68,0x85,0x49,0x68,0x85,0x4a,0x68,0x91,0x49,0xc8,0xc0,0x05,
0xd0,0xf8,0xa0,0x00,0x68,0x85,0x3a,0x68,0x85,0x39,0x4c,0xcf,0x0e,0x84,0x3b,0xa5,
0x0e,0x10,0x09,0xa5,0x64,0x05,0x65,0xd0,0xc8,0x4c,0xcb,0x0e,0xa5,0x61,0xd0,0xc1,
0x4c,0xcb,0x0e,0x84,0x3b,0xa5,0x0e,0x10,0x0b,0xa5,0x64,0x05,0x65,0xf0,0x09,0xa9,
0x01,0x4c,0xbf,0x0e,0xa5,0x61,0xd0,0xf7,0xc8,0xb1,0x39,0x4c,0xbc,0x0e,0xc8,0xb1,
0x39,0x18,0x65,0x2d,0x85,0x64,0xc8,0xb1,0x39,0x65,0x2e,0x85,0x65,0xc8,0xb1,0x39,
0x65,0x2d,0x85,0x6c,0xc8,0xb1,0x39,0x65,0x2e,0x85,0x6d,0xa9,0x05,0x65,0x39,0x85,
0x6a,0xa5,0x3a,0x69,0x00,0x85,0x6b,0xb9,0x6a,0x00,0x91,0x64,0x88,0x10,0xf8,0xa0,
0x05,0xd0,0xc6,0xa0,0x02,0xb1,0x39,0x18,0x65,0x2d,0x85,0x47,0x88,0xb1,0x39,0x65,
0x2e,0x85,0x48,0xa5,0x39,0x69,0x03,0x48,0xa5,0x3a,0x69,0x00,0x48,0xb1,0x47,0xd0,
0x03,0x4c,0xae,0xb3,0x85,0x3a,0x88,0xb1,0x47,0x85,0x39,0xa0,0x02,0xb1,0x47,0x85,
0x49,0xc8,0xb1,0x47,0x85,0x4a,0xc8,0xb1,0x49,0x48,0x88,0x10,0xfa,0xa5,0x4a,0x48,
0xa5,0x49,0x48,0xa5,0x0e,0x4c,0x2b,0x13,0xc8,0xb1,0x39,0x84,0x0c,0x85,0x0b,0xc8,
0xb1,0x39,0x85,0x45,0xc8,0xb1,0x39,0x85,0x46,0xa5,0x31,0x85,0x5f,0xe5,0x2f,0x85,
0x69,0xa5,0x32,0x85,0x60,0xe5,0x30,0xaa,0x05,0x69,0xf0,0x21,0xa0,0x05,0x18,0xb1,
0x39,0x65,0x2f,0x85,0x6b,0x88,0xb1,0x39,0x65,0x30,0x85,0x6c,0xa0,0x01,0xb1,0x6b,
0x88,0x11,0x6b,0xd0,0x58,0xa5,0x69,0x91,0x6b,0xc8,0x8a,0x91,0x6b,0x20,0x94,0xb1,
0x20,0x08,0xa4,0xa0,0x00,0x84,0x3b,0x84,0x72,0xa2,0x05,0xa5,0x45,0x91,0x5f,0x10,
0x01,0xca,0xc8,0xa5,0x46,0x91,0x5f,0x10,0x02,0xca,0xca,0x86,0x71,0xa5,0x0b,0xa0,
0x04,0x91,0x5f,0xd0,0x03,0x20,0xc8,0x13,0x20,0x8e,0x14,0xc8,0xe8,0xd0,0x03,0x18,
0x69,0x01,0x91,0x5f,0xc8,0x8a,0x91,0x5f,0x20,0x4c,0xb3,0xa4,0x22,0x86,0x71,0x85,
0x72,0xc6,0x0b,0xd0,0xe0,0x20,0xaa,0xb2,0xa9,0x06,0x4c,0xbc,0x0e,0x4c,0x4d,0xb2,
0xc8,0x84,0x0a,0x20,0xdf,0x1e,0x46,0x0c,0xaa,0xf0,0x15,0x20,0x5a,0xe2,0xc6,0x0b,
0xf0,0x0e,0x20,0x02,0x1f,0x86,0xba,0xc6,0x0b,0xf0,0x05,0x20,0x02,0x1f,0x86,0xb9,
0x20,0xc5,0x1e,0x4c,0xac,0x0e,0xa5,0x3c,0xc9,0x5e,0x90,0x05,0xd0,0x0f,0x4c,0x59,
0xe1,0xa5,0xb9,0xd0,0x02,0xe6,0xb9,0xa9,0xa7,0x48,0xa9,0xad,0x48,0x4c,0x6f,0xe1,
0x86,0x3c,0xa0,0x01,0xa2,0x00,0x86,0xb7,0x86,0x17,0x86,0xb9,0x86,0x90,0x84,0x0c,
0x84,0xba,0x84,0x7b,0xa9,0x19,0x85,0x16,0xb1,0x39,0x85,0x0b,0xe6,0x39,0xd0,0x02,
0xe6,0x3a,0x60,0x46,0x0c,0x90,0x06,0x4c,0xc8,0x14,0x4c,0x48,0xb2,0x68,0x18,0x69,
0x01,0x85,0x45,0x68,0x69,0x00,0x85,0x46,0x68,0x10,0x0a,0x68,0xd0,0xec,0x68,0x85,
0x65,0xaa,0x6c,0x45,0x00,0x68,0x30,0xe2,0x68,0x38,0xe9,0x89,0x10,0xdc,0xa8,0x68,
0xaa,0x68,0x68,0x68,0x8a,0xc8,0xf0,0xe7,0x4a,0xc8,0xd0,0xfc,0xf0,0xe1,0x20,0xdf,
0x1e,0x20,0x02,0x1f,0x86,0xb8,0xc6,0x0b,0xf0,0x20,0x20,0x02,0x1f,0x86,0xba,0xe0,
0x03,0x90,0x02,0xc6,0xb9,0xc6,0x0b,0xf0,0x11,0x20,0x02,0x1f,0x86,0xb9,0xc6,0x0b,
0xf0,0x08,0x20,0xc8,0x13,0xc6,0x0d,0x20,0x5a,0xe2,0x20,0xc0,0xff,0xb0,0x03,0x4c,
0xac,0x0e,0x4c,0xef,0x19,0xea,0xea,0xea,0x4c,0x08,0xaf,0x20,0x26,0xb5,0xa5,0x33,
0xa4,0x34,0x38,0xe5,0x61,0xb0,0x01,0x88,0xc4,0x32,0xd0,0x02,0xc5,0x31,0x90,0x01,
0x60,0x4c,0x35,0xa4])
let input_prg = []
let cur_input_idx = 2

function sys_read_line() {
  if(cur_input_idx >= input_prg.length || input_prg[cur_input_idx + 1] == 0) { var_C4int = 0; return }
  var_C4int = 1
  var_B1 = input_prg[cur_input_idx + 2] + input_prg[cur_input_idx + 3] * 256
}

function sys_chrget() {
  return int_sys_chrget(true)
}

function sys_chrget3() {
  return int_sys_chrget(false)
}

function int_sys_chrget(ignore_spaces) {
  var_C2int = 0
  var_C3int = 0
  let chr = 0
  do {
    var_C1int++
    chr = input_prg[cur_input_idx + var_C1int]
    if(chr == 0) { // end of line
      var_Cint = 0
      var_C2int = 1
      var_C3int = 0x1f
      cur_input_idx += var_C1int + 1
      return
    }
  } while(ignore_spaces && chr == 0x20)
  var_Cint = chr
  if(chr == 0x3a) { var_C3int = 0x1f }
  return
}

function sys_find_in_array() {
  let arr = 0
  if(var_C5int == 10427) {
    arr = var_Gintarr
  } else if(var_C5int == 12036) {
    arr = var_Hintarr
  } else if(var_C5int == 7218) {
    arr = var_Dintarr
  } else { console.log("ERROR in sys_findinarray") }
  let search_for = var_C6int
  let size = var_C7int
  var_C5int = -1
  let i = 0
  while(i < size) {
    if(arr[i] == search_for) {
      var_C5int = i
      return
    }
    i++
  }
}

function float2string(f) {
  let f_buf = new Float64Array([f])
  let b_buf = new Uint32Array(f_buf.buffer)
  let sign_1b = b_buf[1] >> 31
  let exponent_11b = ((b_buf[1] >> 20) & 0x7ff) - 1023
  let fraction_31b = ((b_buf[1] & 0xfffff) << 11) | (b_buf[0] >>> 21) // implicit leading 1
  if((b_buf[0] >>> 19 & 3) >= 1) fraction_31b++ // rounding
  let c64_b1 = exponent_11b + 129
  let c64_b2 = (sign_1b << 7) + (fraction_31b >> 24)
  let c64_b3 = (fraction_31b >> 16) & 0xff
  let c64_b4 = (fraction_31b >> 8) & 0xff
  let c64_b5 = fraction_31b & 0xff
  return String.fromCharCode(c64_b1) + String.fromCharCode(c64_b2) + String.fromCharCode(c64_b3) + String.fromCharCode(c64_b4) + String.fromCharCode(c64_b5)
}

for(let ch of runtime) {
  pass2_result = pass2_result + String.fromCharCode(ch)
}

let p2_cur_p1_result_idx = 0

function sys_p2_char_read() {
  var_C1int = pass1_result.charCodeAt(p2_cur_p1_result_idx)
  p2_cur_p1_result_idx++
}

function sys_p2_char_write() {
  pass2_result = pass2_result + String.fromCharCode(var_C1int)
}

function c64_parse_float(s) {
  if(s == ".") return 0
  return parseFloat(s)
}

let scr_output = ""

function c64_print(s) {
  scr_output = scr_output + s + "\n"
}

if(typeof document !== 'undefined') {
  document.run_it = main
  console.log("document.run_it() to start")
} else {
  const fs = require('fs')
  input_prg = fs.readFileSync(process.argv[2], null)
  console.log(`Reading file ${process.argv[2]}, length ${input_prg.length}`)
  c64_print = console.log
  let start = performance.now()
  main()
  console.log(`Running took ${(performance.now() - start)>>>0}ms`)
  console.log(`Result length is ${pass2_result.length} bytes`)
  // fs.writeFileSync('test_p1_result.bin', pass1_result, {encoding: "ascii"});
  fs.writeFileSync(process.argv[3], pass2_result, {encoding: "ascii"});
}
